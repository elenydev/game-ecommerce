{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\projekty\\\\ecommerce\\\\front\\\\components\\\\RegisterForm\\\\index.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { useForm } from \"react-hook-form\";\nimport Input from \"@material-ui/core/Input\";\nimport { FormLabel, Button } from \"@material-ui/core\";\nvar Wrapper = styled.div.withConfig({\n  displayName: \"RegisterForm__Wrapper\",\n  componentId: \"sc-1ngtmd-0\"\n})([\"display:flex;align-items:center;flex-direction:column;justify-content:space-between;min-width:35vw;max-width:500px;min-height:40vh;padding:10px;color:white;box-shadow:2px 2px 8px 0 rgb(0 0 0 / 60%);background-color:rgba(0,0,0,0.3);\"]);\n_c = Wrapper;\nvar Form = styled.form.withConfig({\n  displayName: \"RegisterForm__Form\",\n  componentId: \"sc-1ngtmd-1\"\n})([\"display:flex;width:100%;height:100%;flex-direction:column;justify-content:space-between;align-items:center;color:white;& > .MuiButton-containedSecondary{margin:15px;background-color:#b73d1cbf;&:hover{background-color:#ff3600bf;}}\"]);\n_c2 = Form;\nvar ErrorSpan = styled.span.withConfig({\n  displayName: \"RegisterForm__ErrorSpan\",\n  componentId: \"sc-1ngtmd-2\"\n})([\"color:red;font-size:12px;\"]);\n_c3 = ErrorSpan;\nvar Header = styled.h2.withConfig({\n  displayName: \"RegisterForm__Header\",\n  componentId: \"sc-1ngtmd-3\"\n})([\"display:flex;font-weight:700;\"]);\n_c4 = Header;\nvar InputElement = styled(Input).withConfig({\n  displayName: \"RegisterForm__InputElement\",\n  componentId: \"sc-1ngtmd-4\"\n})([\"margin:5px 0;color:white;& > .MuiInputBase-input{color:white;}\"]);\n_c5 = InputElement;\nvar defaultValues = {\n  firstName: null,\n  lastName: null,\n  email: null,\n  password: null\n};\n\nvar RegisterForm = function RegisterForm() {\n  _s();\n\n  var _useForm = useForm({\n    defaultValues: defaultValues\n  }),\n      register = _useForm.register,\n      handleSubmit = _useForm.handleSubmit,\n      errors = _useForm.errors,\n      setError = _useForm.setError,\n      reset = _useForm.reset;\n\n  var registerUser = function registerUser(data, event) {\n    event.preventDefault();\n    console.log(data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      children: \"Create an account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit(registerUser),\n      children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n        children: /*#__PURE__*/_jsxDEV(InputElement, {\n          type: \"text\",\n          name: \"firstName\",\n          placeholder: \"First Name\",\n          inputRef: register({\n            required: true\n          }),\n          onChange: function onChange() {\n            setError(\"firstName\", {\n              type: \"manual\",\n              message: \"You have to provide a first name\"\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, _this), errors.firstName && errors.firstName.type === \"required\" && /*#__PURE__*/_jsxDEV(ErrorSpan, {\n        children: \"Please provide a first name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(FormLabel, {\n        children: /*#__PURE__*/_jsxDEV(InputElement, {\n          type: \"text\",\n          name: \"lastName\",\n          placeholder: \"Last Name\",\n          inputRef: register({\n            required: true\n          }),\n          onChange: function onChange() {\n            setError(\"lastName\", {\n              type: \"manual\",\n              message: \"You have to provide a last name\"\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, _this), errors.lastName && errors.lastName.type === \"required\" && /*#__PURE__*/_jsxDEV(ErrorSpan, {\n        children: \"Please provide a last name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(FormLabel, {\n        children: [/*#__PURE__*/_jsxDEV(InputElement, {\n          type: \"text\",\n          name: \"email\",\n          placeholder: \"Enter email\",\n          inputRef: register({\n            required: true,\n            pattern: {\n              value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n              message: \"invalid email address\"\n            }\n          }),\n          onChange: function onChange() {\n            setError(\"email\", {\n              type: \"manual\",\n              message: \"You have to a email\"\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, _this), errors.email && errors.email.type === \"required\" && /*#__PURE__*/_jsxDEV(ErrorSpan, {\n          children: \"Please provide a email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(FormLabel, {\n        children: [/*#__PURE__*/_jsxDEV(InputElement, {\n          type: \"password\",\n          name: \"password\",\n          placeholder: \"Enter Password\",\n          inputRef: register({\n            required: true\n          }),\n          onChange: function onChange() {\n            setError(\"password\", {\n              type: \"manual\",\n              message: \"You have to provide a password\"\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, _this), errors.password && errors.password.type === \"required\" && /*#__PURE__*/_jsxDEV(ErrorSpan, {\n          children: \"Please provide a password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        color: \"secondary\",\n        children: \"Create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(RegisterForm, \"VfD5fQQClLmpmB0QDJLztbQYVL4=\", false, function () {\n  return [useForm];\n});\n\n_c6 = RegisterForm;\nexport default RegisterForm;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"Form\");\n$RefreshReg$(_c3, \"ErrorSpan\");\n$RefreshReg$(_c4, \"Header\");\n$RefreshReg$(_c5, \"InputElement\");\n$RefreshReg$(_c6, \"RegisterForm\");","map":{"version":3,"sources":["D:/projekty/ecommerce/front/components/RegisterForm/index.js"],"names":["React","styled","useForm","Input","FormLabel","Button","Wrapper","div","Form","form","ErrorSpan","span","Header","h2","InputElement","defaultValues","firstName","lastName","email","password","RegisterForm","register","handleSubmit","errors","setError","reset","registerUser","data","event","preventDefault","console","log","required","type","message","pattern","value"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport { FormLabel, Button } from \"@material-ui/core\";\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  min-width: 35vw;\r\n  max-width: 500px;\r\n  min-height: 40vh;\r\n  padding: 10px;\r\n  color: white;\r\n  box-shadow: 2px 2px 8px 0 rgb(0 0 0 / 60%);\r\n  background-color: rgba(0, 0, 0, 0.3);\r\n`;\r\n\r\nconst Form = styled.form`\r\n  display: flex;\r\n  width: 100%;\r\n  height: 100%;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  color: white;\r\n\r\n  & > .MuiButton-containedSecondary {\r\n    margin: 15px;\r\n    background-color: #b73d1cbf;\r\n\r\n    &:hover {\r\n      background-color: #ff3600bf;\r\n    }\r\n  }\r\n`;\r\n\r\nconst ErrorSpan = styled.span`\r\n  color: red;\r\n  font-size: 12px;\r\n`;\r\n\r\nconst Header = styled.h2`\r\n  display: flex;\r\n  font-weight: 700;\r\n`;\r\n\r\nconst InputElement = styled(Input)`\r\n  margin: 5px 0;\r\n  color: white;\r\n\r\n  & > .MuiInputBase-input {\r\n    color: white;\r\n  }\r\n`;\r\n\r\nconst defaultValues = {\r\n  firstName: null,\r\n  lastName: null,\r\n  email: null,\r\n  password: null,\r\n};\r\n\r\nconst RegisterForm = () => {\r\n  const { register, handleSubmit, errors, setError, reset } = useForm({\r\n    defaultValues,\r\n  });\r\n\r\n  const registerUser = (data, event) => {\r\n    event.preventDefault();\r\n    console.log(data);\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Header>Create an account</Header>\r\n\r\n      <Form onSubmit={handleSubmit(registerUser)}>\r\n        <FormLabel>\r\n          <InputElement\r\n            type='text'\r\n            name='firstName'\r\n            placeholder='First Name'\r\n            inputRef={register({ required: true })}\r\n            onChange={() => {\r\n              setError(\"firstName\", {\r\n                type: \"manual\",\r\n                message: \"You have to provide a first name\",\r\n              });\r\n            }}\r\n          />\r\n        </FormLabel>\r\n        {errors.firstName && errors.firstName.type === \"required\" && (\r\n          <ErrorSpan>Please provide a first name</ErrorSpan>\r\n        )}\r\n        <FormLabel>\r\n          <InputElement\r\n            type='text'\r\n            name='lastName'\r\n            placeholder='Last Name'\r\n            inputRef={register({ required: true })}\r\n            onChange={() => {\r\n              setError(\"lastName\", {\r\n                type: \"manual\",\r\n                message: \"You have to provide a last name\",\r\n              });\r\n            }}\r\n          />\r\n        </FormLabel>\r\n        {errors.lastName && errors.lastName.type === \"required\" && (\r\n          <ErrorSpan>Please provide a last name</ErrorSpan>\r\n        )}\r\n        <FormLabel>\r\n          <InputElement\r\n            type='text'\r\n            name='email'\r\n            placeholder='Enter email'\r\n            inputRef={register({\r\n              required: true,\r\n              pattern: {\r\n                value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\r\n                message: \"invalid email address\",\r\n              },\r\n            })}\r\n            onChange={() => {\r\n              setError(\"email\", {\r\n                type: \"manual\",\r\n                message: \"You have to a email\",\r\n              });\r\n            }}\r\n          />\r\n          {errors.email && errors.email.type === \"required\" && (\r\n            <ErrorSpan>Please provide a email</ErrorSpan>\r\n          )}\r\n        </FormLabel>\r\n        <FormLabel>\r\n          <InputElement\r\n            type='password'\r\n            name='password'\r\n            placeholder='Enter Password'\r\n            inputRef={register({ required: true })}\r\n            onChange={() => {\r\n              setError(\"password\", {\r\n                type: \"manual\",\r\n                message: \"You have to provide a password\",\r\n              });\r\n            }}\r\n          />\r\n          {errors.password && errors.password.type === \"required\" && (\r\n            <ErrorSpan>Please provide a password</ErrorSpan>\r\n          )}\r\n        </FormLabel>\r\n        <Button type='submit' variant='contained' color='secondary'>\r\n          Create\r\n        </Button>\r\n      </Form>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default RegisterForm;\r\n"]},"metadata":{},"sourceType":"module"}