{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\projekty\\\\ecommerce\\\\front\\\\components\\\\Alert\\\\index.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nfunction Alert(props) {\n  return /*#__PURE__*/_jsxDEV(MuiAlert, _objectSpread({\n    elevation: 6,\n    variant: \"filled\"\n  }, props), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 10\n  }, this);\n}\n\n_c = Alert;\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      width: \"100%\",\n      \"& > * + *\": {\n        marginTop: theme.spacing(2)\n      }\n    }\n  };\n});\n\nvar CustomizedSnackbars = function CustomizedSnackbars(_ref) {\n  _s();\n\n  var message = _ref.message,\n      shouldOpen = _ref.shouldOpen,\n      variant = _ref.variant;\n  var classes = useStyles();\n\n  var _useState = useState(shouldOpen || false),\n      open = _useState[0],\n      setOpen = _useState[1];\n\n  var handleClose = function handleClose(event, reason) {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: open,\n      autoHideDuration: 4000,\n      onClose: handleClose,\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: handleClose,\n        severity: variant,\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(CustomizedSnackbars, \"XV3p2MY96gENKdqCFl1en6j9ZiY=\", false, function () {\n  return [useStyles];\n});\n\n_c2 = CustomizedSnackbars;\nexport default CustomizedSnackbars;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Alert\");\n$RefreshReg$(_c2, \"CustomizedSnackbars\");","map":{"version":3,"sources":["D:/projekty/ecommerce/front/components/Alert/index.js"],"names":["React","useState","Button","Snackbar","MuiAlert","makeStyles","Alert","props","useStyles","theme","root","width","marginTop","spacing","CustomizedSnackbars","message","shouldOpen","variant","classes","open","setOpen","handleClose","event","reason"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,UAAT,QAA2B,0BAA3B;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AACpB,sBAAO,QAAC,QAAD;AAAU,IAAA,SAAS,EAAE,CAArB;AAAwB,IAAA,OAAO,EAAC;AAAhC,KAA6CA,KAA7C;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;KAFQD,K;AAIT,IAAME,SAAS,GAAGH,UAAU,CAAC,UAACI,KAAD;AAAA,SAAY;AACvCC,IAAAA,IAAI,EAAE;AACJC,MAAAA,KAAK,EAAE,MADH;AAEJ,mBAAa;AACXC,QAAAA,SAAS,EAAEH,KAAK,CAACI,OAAN,CAAc,CAAd;AADA;AAFT;AADiC,GAAZ;AAAA,CAAD,CAA5B;;AASA,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,OAAsC;AAAA;;AAAA,MAAnCC,OAAmC,QAAnCA,OAAmC;AAAA,MAA1BC,UAA0B,QAA1BA,UAA0B;AAAA,MAAdC,OAAc,QAAdA,OAAc;AAChE,MAAMC,OAAO,GAAGV,SAAS,EAAzB;;AADgE,kBAExCP,QAAQ,CAACe,UAAU,IAAI,KAAf,CAFgC;AAAA,MAEzDG,IAFyD;AAAA,MAEnDC,OAFmD;;AAIhE,MAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAQC,MAAR,EAAmB;AACrC,QAAIA,MAAM,KAAK,WAAf,EAA4B;AAC1B;AACD;;AACDH,IAAAA,OAAO,CAAC,KAAD,CAAP;AACD,GALD;;AAOA,sBACE;AAAK,IAAA,SAAS,EAAEF,OAAO,CAACR,IAAxB;AAAA,2BACE,QAAC,QAAD;AAAU,MAAA,IAAI,EAAES,IAAhB;AAAsB,MAAA,gBAAgB,EAAE,IAAxC;AAA8C,MAAA,OAAO,EAAEE,WAAvD;AAAA,6BACE,QAAC,KAAD;AAAO,QAAA,OAAO,EAAEA,WAAhB;AAA6B,QAAA,QAAQ,EAAEJ,OAAvC;AAAA,kBACGF;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,WADF;AASD,CApBD;;GAAMD,mB;UACYN,S;;;MADZM,mB;AAsBN,eAAeA,mBAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant='filled' {...props} />;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    \"& > * + *\": {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nconst CustomizedSnackbars = ({ message, shouldOpen, variant }) => {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState(shouldOpen || false);\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Snackbar open={open} autoHideDuration={4000} onClose={handleClose}>\r\n        <Alert onClose={handleClose} severity={variant}>\r\n          {message}\r\n        </Alert>\r\n      </Snackbar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomizedSnackbars;\r\n"]},"metadata":{},"sourceType":"module"}