{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\projekty\\\\ecommerce\\\\front\\\\components\\\\RegisterForm\\\\index.js\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { useForm } from \"react-hook-form\";\nimport Input from \"@material-ui/core/Input\";\nimport { FormLabel } from \"@material-ui/core\";\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  justify-content: space-between;\n  min-width: 35vw;\n  max-width: 500px;\n  min-height: 40vh;\n  background-color: #1d1d1c;\n  padding: 10px;\n  color: white;\n`;\nconst Form = styled.form`\n  display: flex;\n  width: 100%;\n  height: 100%;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n\n  /* & > placeholder {\n    color: gray;\n  } */\n`;\nconst ErrorSpan = styled.span`\n  color: red;\n  font-size: 12px;\n`;\nconst Header = styled.h3`\n  display: flex;\n  width: 100%;\n  align-content: center;\n  text-align: center;\n  font-weight: 700;\n`;\nconst defaultValues = {\n  firstName: \"\",\n  lastName: \"\",\n  email: \"\",\n  password: \"\"\n};\n\nconst RegisterForm = () => {\n  const {\n    register,\n    handleSubmit,\n    errors,\n    setError,\n    reset\n  } = useForm({\n    defaultValues\n  });\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      children: \"Create an account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          name: \"firstName\",\n          placeholder: \"First Name\",\n          inputRef: register({\n            required: true\n          }),\n          onChange: () => {\n            setError(\"firstName\", {\n              type: \"manual\",\n              message: \"You have to provide a first name\"\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), errors.firstName && errors.firstName.type === \"required\" && /*#__PURE__*/_jsxDEV(ErrorSpan, {\n          children: \"Please provide a first name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          name: \"lastName\",\n          placeholder: \"Last Name\",\n          inputRef: register({\n            required: true\n          }),\n          onChange: () => {\n            setError(\"lastName\", {\n              type: \"manual\",\n              message: \"You have to provide a last name\"\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), errors.lastName && errors.lastName.type === \"required\" && /*#__PURE__*/_jsxDEV(ErrorSpan, {\n          children: \"Please provide a last name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          name: \"email\",\n          placeholder: \"Enter email\",\n          inputRef: register({\n            required: true,\n            pattern: {\n              value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n              message: \"invalid email address\"\n            }\n          }),\n          onChange: () => {\n            setError(\"email\", {\n              type: \"manual\",\n              message: \"You have to a email\"\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), errors.email && errors.email.type === \"required\" && /*#__PURE__*/_jsxDEV(ErrorSpan, {\n          children: \"Please provide a email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          type: \"password\",\n          name: \"password\",\n          placeholder: \"Enter Password\",\n          inputRef: register({\n            required: true\n          }),\n          onChange: () => {\n            setError(\"password\", {\n              type: \"manual\",\n              message: \"You have to provide a password\"\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), errors.password && errors.password.type === \"required\" && /*#__PURE__*/_jsxDEV(ErrorSpan, {\n          children: \"Please provide a password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n\nexport default RegisterForm;","map":{"version":3,"sources":["D:/projekty/ecommerce/front/components/RegisterForm/index.js"],"names":["React","styled","useForm","Input","FormLabel","Wrapper","div","Form","form","ErrorSpan","span","Header","h3","defaultValues","firstName","lastName","email","password","RegisterForm","register","handleSubmit","errors","setError","reset","required","type","message","pattern","value"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,SAASC,SAAT,QAA0B,mBAA1B;AAEA,MAAMC,OAAO,GAAGJ,MAAM,CAACK,GAAI;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAXA;AAaA,MAAMC,IAAI,GAAGN,MAAM,CAACO,IAAK;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAXA;AAaA,MAAMC,SAAS,GAAGR,MAAM,CAACS,IAAK;AAC9B;AACA;AACA,CAHA;AAKA,MAAMC,MAAM,GAAGV,MAAM,CAACW,EAAG;AACzB;AACA;AACA;AACA;AACA;AACA,CANA;AAQA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,SAAS,EAAE,EADS;AAEpBC,EAAAA,QAAQ,EAAE,EAFU;AAGpBC,EAAAA,KAAK,EAAE,EAHa;AAIpBC,EAAAA,QAAQ,EAAE;AAJU,CAAtB;;AAOA,MAAMC,YAAY,GAAG,MAAM;AACzB,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,YAAZ;AAA0BC,IAAAA,MAA1B;AAAkCC,IAAAA,QAAlC;AAA4CC,IAAAA;AAA5C,MAAsDrB,OAAO,CAAC;AAClEW,IAAAA;AADkE,GAAD,CAAnE;AAIA,sBACE,QAAC,OAAD;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAGE,QAAC,IAAD;AAAA,8BACE,QAAC,SAAD;AAAA,gCACE,QAAC,KAAD;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,IAAI,EAAC,WAFP;AAGE,UAAA,WAAW,EAAC,YAHd;AAIE,UAAA,QAAQ,EAAEM,QAAQ,CAAC;AAAEK,YAAAA,QAAQ,EAAE;AAAZ,WAAD,CAJpB;AAKE,UAAA,QAAQ,EAAE,MAAM;AACdF,YAAAA,QAAQ,CAAC,WAAD,EAAc;AACpBG,cAAAA,IAAI,EAAE,QADc;AAEpBC,cAAAA,OAAO,EAAE;AAFW,aAAd,CAAR;AAID;AAVH;AAAA;AAAA;AAAA;AAAA,gBADF,EAaGL,MAAM,CAACP,SAAP,IAAoBO,MAAM,CAACP,SAAP,CAAiBW,IAAjB,KAA0B,UAA9C,iBACC,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAkBE,QAAC,SAAD;AAAA,gCACE,QAAC,KAAD;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,IAAI,EAAC,UAFP;AAGE,UAAA,WAAW,EAAC,WAHd;AAIE,UAAA,QAAQ,EAAEN,QAAQ,CAAC;AAAEK,YAAAA,QAAQ,EAAE;AAAZ,WAAD,CAJpB;AAKE,UAAA,QAAQ,EAAE,MAAM;AACdF,YAAAA,QAAQ,CAAC,UAAD,EAAa;AACnBG,cAAAA,IAAI,EAAE,QADa;AAEnBC,cAAAA,OAAO,EAAE;AAFU,aAAb,CAAR;AAID;AAVH;AAAA;AAAA;AAAA;AAAA,gBADF,EAaGL,MAAM,CAACN,QAAP,IAAmBM,MAAM,CAACN,QAAP,CAAgBU,IAAhB,KAAyB,UAA5C,iBACC,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAlBF,eAmCE,QAAC,SAAD;AAAA,gCACE,QAAC,KAAD;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,IAAI,EAAC,OAFP;AAGE,UAAA,WAAW,EAAC,aAHd;AAIE,UAAA,QAAQ,EAAEN,QAAQ,CAAC;AACjBK,YAAAA,QAAQ,EAAE,IADO;AAEjBG,YAAAA,OAAO,EAAE;AACPC,cAAAA,KAAK,EAAE,0CADA;AAEPF,cAAAA,OAAO,EAAE;AAFF;AAFQ,WAAD,CAJpB;AAWE,UAAA,QAAQ,EAAE,MAAM;AACdJ,YAAAA,QAAQ,CAAC,OAAD,EAAU;AAChBG,cAAAA,IAAI,EAAE,QADU;AAEhBC,cAAAA,OAAO,EAAE;AAFO,aAAV,CAAR;AAID;AAhBH;AAAA;AAAA;AAAA;AAAA,gBADF,EAmBGL,MAAM,CAACL,KAAP,IAAgBK,MAAM,CAACL,KAAP,CAAaS,IAAb,KAAsB,UAAtC,iBACC,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBApBJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAnCF,eA0DE,QAAC,SAAD;AAAA,gCACE,QAAC,KAAD;AACE,UAAA,IAAI,EAAC,UADP;AAEE,UAAA,IAAI,EAAC,UAFP;AAGE,UAAA,WAAW,EAAC,gBAHd;AAIE,UAAA,QAAQ,EAAEN,QAAQ,CAAC;AAAEK,YAAAA,QAAQ,EAAE;AAAZ,WAAD,CAJpB;AAKE,UAAA,QAAQ,EAAE,MAAM;AACdF,YAAAA,QAAQ,CAAC,UAAD,EAAa;AACnBG,cAAAA,IAAI,EAAE,QADa;AAEnBC,cAAAA,OAAO,EAAE;AAFU,aAAb,CAAR;AAID;AAVH;AAAA;AAAA;AAAA;AAAA,gBADF,EAaGL,MAAM,CAACJ,QAAP,IAAmBI,MAAM,CAACJ,QAAP,CAAgBQ,IAAhB,KAAyB,UAA5C,iBACC,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,cA1DF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkFD,CAvFD;;AAyFA,eAAeP,YAAf","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport { FormLabel } from \"@material-ui/core\";\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  min-width: 35vw;\r\n  max-width: 500px;\r\n  min-height: 40vh;\r\n  background-color: #1d1d1c;\r\n  padding: 10px;\r\n  color: white;\r\n`;\r\n\r\nconst Form = styled.form`\r\n  display: flex;\r\n  width: 100%;\r\n  height: 100%;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n\r\n  /* & > placeholder {\r\n    color: gray;\r\n  } */\r\n`;\r\n\r\nconst ErrorSpan = styled.span`\r\n  color: red;\r\n  font-size: 12px;\r\n`;\r\n\r\nconst Header = styled.h3`\r\n  display: flex;\r\n  width: 100%;\r\n  align-content: center;\r\n  text-align: center;\r\n  font-weight: 700;\r\n`;\r\n\r\nconst defaultValues = {\r\n  firstName: \"\",\r\n  lastName: \"\",\r\n  email: \"\",\r\n  password: \"\",\r\n};\r\n\r\nconst RegisterForm = () => {\r\n  const { register, handleSubmit, errors, setError, reset } = useForm({\r\n    defaultValues,\r\n  });\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Header>Create an account</Header>\r\n\r\n      <Form>\r\n        <FormLabel>\r\n          <Input\r\n            type='text'\r\n            name='firstName'\r\n            placeholder='First Name'\r\n            inputRef={register({ required: true })}\r\n            onChange={() => {\r\n              setError(\"firstName\", {\r\n                type: \"manual\",\r\n                message: \"You have to provide a first name\",\r\n              });\r\n            }}\r\n          />\r\n          {errors.firstName && errors.firstName.type === \"required\" && (\r\n            <ErrorSpan>Please provide a first name</ErrorSpan>\r\n          )}\r\n        </FormLabel>\r\n        <FormLabel>\r\n          <Input\r\n            type='text'\r\n            name='lastName'\r\n            placeholder='Last Name'\r\n            inputRef={register({ required: true })}\r\n            onChange={() => {\r\n              setError(\"lastName\", {\r\n                type: \"manual\",\r\n                message: \"You have to provide a last name\",\r\n              });\r\n            }}\r\n          />\r\n          {errors.lastName && errors.lastName.type === \"required\" && (\r\n            <ErrorSpan>Please provide a last name</ErrorSpan>\r\n          )}\r\n        </FormLabel>\r\n        <FormLabel>\r\n          <Input\r\n            type='text'\r\n            name='email'\r\n            placeholder='Enter email'\r\n            inputRef={register({\r\n              required: true,\r\n              pattern: {\r\n                value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\r\n                message: \"invalid email address\",\r\n              },\r\n            })}\r\n            onChange={() => {\r\n              setError(\"email\", {\r\n                type: \"manual\",\r\n                message: \"You have to a email\",\r\n              });\r\n            }}\r\n          />\r\n          {errors.email && errors.email.type === \"required\" && (\r\n            <ErrorSpan>Please provide a email</ErrorSpan>\r\n          )}\r\n        </FormLabel>\r\n        <FormLabel>\r\n          <Input\r\n            type='password'\r\n            name='password'\r\n            placeholder='Enter Password'\r\n            inputRef={register({ required: true })}\r\n            onChange={() => {\r\n              setError(\"password\", {\r\n                type: \"manual\",\r\n                message: \"You have to provide a password\",\r\n              });\r\n            }}\r\n          />\r\n          {errors.password && errors.password.type === \"required\" && (\r\n            <ErrorSpan>Please provide a password</ErrorSpan>\r\n          )}\r\n        </FormLabel>\r\n      </Form>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default RegisterForm;\r\n"]},"metadata":{},"sourceType":"module"}