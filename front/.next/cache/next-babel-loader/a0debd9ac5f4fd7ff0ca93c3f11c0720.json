{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\projekty\\\\ecommerce\\\\front\\\\components\\\\ContactForm\\\\index.js\";\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useForm } from \"react-hook-form\";\nimport { FormLabel } from \"@material-ui/core\";\nimport Alert from \"../Alert/index.js\";\nconst Wrapper = styled.div.withConfig({\n  displayName: \"ContactForm__Wrapper\",\n  componentId: \"sc-1pug6mx-0\"\n})([\"display:flex;justify-content:center;align-items:center;font-family:\\\"Roboto\\\";background-color:#24272e;flex-direction:column;@media (min-width:960px){padding:5% 0px;}\"]);\nconst Form = styled.form.withConfig({\n  displayName: \"ContactForm__Form\",\n  componentId: \"sc-1pug6mx-1\"\n})([\"display:flex;flex-direction:column;background-color:#24272e;padding:15px 25px;border:0.5px solid (255,255,255,0.8);box-shadow:2px 2px 8px 0 rgb(0 0 0 / 60%);width:100%;height:100%;@media (min-width:960px){padding:40px;min-width:40vw;max-width:500px;}\"]);\nconst Heading = styled.h3.withConfig({\n  displayName: \"ContactForm__Heading\",\n  componentId: \"sc-1pug6mx-2\"\n})([\"display:block;letter-spacing:2px;color:#5bb2fc;font-family:\\\"Black Ops One\\\",normal;font-weight:500;margin:10px 0;width:100%;text-align:center;\"]);\nconst Input = styled.input.withConfig({\n  displayName: \"ContactForm__Input\",\n  componentId: \"sc-1pug6mx-3\"\n})([\"border:none;border-bottom:2px solid white;outline:none;background-color:transparent;color:rgba(255,255,255,0.9);padding:5px;font-size:1em;margin:5px;width:100%;&::placeholder{color:white;}&:focus{outline:1px solid white;}@media (min-width:960px){padding:12px;}\"]);\nconst TextInput = styled.textarea.withConfig({\n  displayName: \"ContactForm__TextInput\",\n  componentId: \"sc-1pug6mx-4\"\n})([\"border:none;border-bottom:2px solid white;outline:none;background-color:transparent;color:rgba(255,255,255,0.9);padding:5px;font-size:1em;text-decoration:none;font-family:\\\"Roboto\\\";margin:10px 5px;width:100%;resize:none;&::placeholder{color:white;}&:focus{outline:1px solid white;}@media (min-width:960px){padding:12px;min-height:150px;}\"]);\nconst ErrorSpan = styled.span.withConfig({\n  displayName: \"ContactForm__ErrorSpan\",\n  componentId: \"sc-1pug6mx-5\"\n})([\"color:#ff5a5a;font-size:12px;& > a{cursor:pointer;}\"]);\nconst Button = styled.button.withConfig({\n  displayName: \"ContactForm__Button\",\n  componentId: \"sc-1pug6mx-6\"\n})([\"padding:5px 8px;color:white;background-color:transparent;height:100%;border:2px solid white;outline:none;font-size:1em;cursor:pointer;transition:0.5s all linear;align-self:center;@media (min-width:960px){padding:12px;}&:hover,&:focus{background-color:#ff5a5a;}\"]);\nconst defaultValues = {\n  customerName: null,\n  email: null,\n  message: null\n};\n\nconst ContactForm = () => {\n  const {\n    register,\n    handleSubmit,\n    errors,\n    setError\n  } = useForm({\n    defaultValues\n  });\n  const {\n    0: message,\n    1: setMessage\n  } = useState(null);\n  const {\n    0: variant,\n    1: setVariant\n  } = useState(null);\n\n  const handleSendEmail = async (data, event) => {\n    event.preventDefault();\n\n    try {\n      const request = await fetch(\"http://localhost:8080/receiveEmail\", {\n        method: \"POST\",\n        body: JSON.stringify(data),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      const response = await request.json();\n\n      if (!response.email) {\n        setMessage(\"Something went wrong, try again\"), setVariant(\"error\");\n        return;\n      }\n\n      setMessage(\"Email send\");\n      setVariant(\"success\");\n    } catch (err) {\n      setMessage(\"Something went wrong, try again\");\n    }\n\n    setTimeout(() => {\n      setMessage(null);\n      setVariant(null);\n    }, 1000);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    id: \"contact\",\n    children: [/*#__PURE__*/_jsxDEV(Heading, {\n      children: \"Have question?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit(handleSendEmail),\n      children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          name: \"customerName\",\n          placeholder: \"Your name\",\n          ref: register({\n            required: true\n          }),\n          onChange: () => {\n            setError(\"customerName\", {\n              type: \"manual\",\n              message: \"You have to provide a name\"\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), errors.customerName && errors.customerName.type === \"required\" && /*#__PURE__*/_jsxDEV(ErrorSpan, {\n        children: \"Please provide a name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          type: \"email\",\n          name: \"email\",\n          placeholder: \"Your e-mail\",\n          ref: register({\n            required: true,\n            pattern: {\n              value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n              message: \"invalid email address\"\n            }\n          }),\n          onChange: () => {\n            setError(\"email\", {\n              type: \"manual\",\n              message: \"You have to a email\"\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this), errors.email && errors.email.type === \"required\" && /*#__PURE__*/_jsxDEV(ErrorSpan, {\n        children: \"Please provide a email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 11\n      }, this), errors.email && errors.email.type === \"pattern\" && /*#__PURE__*/_jsxDEV(ErrorSpan, {\n        children: \"Please provide a correct email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n        children: /*#__PURE__*/_jsxDEV(TextInput, {\n          placeholder: \"Your message...\",\n          name: \"message\",\n          ref: register({\n            required: true\n          }),\n          onChange: () => {\n            setError(\"message\", {\n              type: \"manual\",\n              message: \"You have to provide a message\"\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this), errors.message && errors.message.type === \"required\" && /*#__PURE__*/_jsxDEV(ErrorSpan, {\n        children: \"Please provide a message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(Alert, {\n      shouldOpen: true,\n      message: message,\n      variant: variant\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 175,\n    columnNumber: 5\n  }, this);\n};\n\nexport default ContactForm;","map":{"version":3,"sources":["D:/projekty/ecommerce/front/components/ContactForm/index.js"],"names":["React","useState","styled","useForm","FormLabel","Alert","Wrapper","div","Form","form","Heading","h3","Input","input","TextInput","textarea","ErrorSpan","span","Button","button","defaultValues","customerName","email","message","ContactForm","register","handleSubmit","errors","setError","setMessage","variant","setVariant","handleSendEmail","data","event","preventDefault","request","fetch","method","body","JSON","stringify","headers","response","json","err","setTimeout","required","type","pattern","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { FormLabel } from \"@material-ui/core\";\r\nimport Alert from \"../Alert/index.js\";\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-family: \"Roboto\";\r\n  background-color: #24272e;\r\n  flex-direction: column;\r\n\r\n  @media (min-width: 960px) {\r\n    padding: 5% 0px;\r\n  }\r\n`;\r\n\r\nconst Form = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  background-color: #24272e;\r\n  padding: 15px 25px;\r\n  border: 0.5px solid (255, 255, 255, 0.8);\r\n  box-shadow: 2px 2px 8px 0 rgb(0 0 0 / 60%);\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  @media (min-width: 960px) {\r\n    padding: 40px;\r\n    min-width: 40vw;\r\n    max-width: 500px;\r\n  }\r\n`;\r\n\r\nconst Heading = styled.h3`\r\n  display: block;\r\n  letter-spacing: 2px;\r\n  color: #5bb2fc;\r\n  font-family: \"Black Ops One\", normal;\r\n  font-weight: 500;\r\n  margin: 10px 0;\r\n  width: 100%;\r\n  text-align: center;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  border: none;\r\n  border-bottom: 2px solid white;\r\n  outline: none;\r\n  background-color: transparent;\r\n  color: rgba(255, 255, 255, 0.9);\r\n  padding: 5px;\r\n  font-size: 1em;\r\n  margin: 5px;\r\n  width: 100%;\r\n\r\n  &::placeholder {\r\n    color: white;\r\n  }\r\n\r\n  &:focus {\r\n    outline: 1px solid white;\r\n  }\r\n\r\n  @media (min-width: 960px) {\r\n    padding: 12px;\r\n  }\r\n`;\r\n\r\nconst TextInput = styled.textarea`\r\n  border: none;\r\n  border-bottom: 2px solid white;\r\n  outline: none;\r\n  background-color: transparent;\r\n  color: rgba(255, 255, 255, 0.9);\r\n  padding: 5px;\r\n  font-size: 1em;\r\n  text-decoration: none;\r\n  font-family: \"Roboto\";\r\n  margin: 10px 5px;\r\n  width: 100%;\r\n  resize: none;\r\n\r\n  &::placeholder {\r\n    color: white;\r\n  }\r\n\r\n  &:focus {\r\n    outline: 1px solid white;\r\n  }\r\n\r\n  @media (min-width: 960px) {\r\n    padding: 12px;\r\n    min-height: 150px;\r\n  }\r\n`;\r\n\r\nconst ErrorSpan = styled.span`\r\n  color: #ff5a5a;\r\n  font-size: 12px;\r\n\r\n  & > a {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\n\r\nconst Button = styled.button`\r\n  padding: 5px 8px;\r\n  color: white;\r\n  background-color: transparent;\r\n  height: 100%;\r\n  border: 2px solid white;\r\n  outline: none;\r\n  font-size: 1em;\r\n  cursor: pointer;\r\n  transition: 0.5s all linear;\r\n  align-self: center;\r\n\r\n  @media (min-width: 960px) {\r\n    padding: 12px;\r\n  }\r\n\r\n  &:hover,\r\n  &:focus {\r\n    background-color: #ff5a5a;\r\n  }\r\n`;\r\n\r\nconst defaultValues = {\r\n  customerName: null,\r\n  email: null,\r\n  message: null,\r\n};\r\n\r\nconst ContactForm = () => {\r\n  const { register, handleSubmit, errors, setError } = useForm({\r\n    defaultValues,\r\n  });\r\n  const [message, setMessage] = useState(null);\r\n  const [variant, setVariant] = useState(null);\r\n\r\n  const handleSendEmail = async (data, event) => {\r\n    event.preventDefault();\r\n    \r\n    try {\r\n      const request = await fetch(\"http://localhost:8080/receiveEmail\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify(data),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n      const response = await request.json();\r\n      if (!response.email) {\r\n        setMessage(\"Something went wrong, try again\"),\r\n        setVariant(\"error\");\r\n        return;\r\n      }\r\n      setMessage(\"Email send\");\r\n      setVariant(\"success\");\r\n    } catch (err) {\r\n      setMessage(\"Something went wrong, try again\");\r\n    }\r\n\r\n    setTimeout(() => {\r\n      setMessage(null);\r\n      setVariant(null);\r\n    }, 1000);\r\n  };\r\n\r\n  return (\r\n    <Wrapper id='contact'>\r\n      <Heading>Have question?</Heading>\r\n\r\n      <Form onSubmit={handleSubmit(handleSendEmail)}>\r\n        <FormLabel>\r\n          <Input\r\n            type='text'\r\n            name='customerName'\r\n            placeholder='Your name'\r\n            ref={register({ required: true })}\r\n            onChange={() => {\r\n              setError(\"customerName\", {\r\n                type: \"manual\",\r\n                message: \"You have to provide a name\",\r\n              });\r\n            }}\r\n          />\r\n        </FormLabel>\r\n        {errors.customerName && errors.customerName.type === \"required\" && (\r\n          <ErrorSpan>Please provide a name</ErrorSpan>\r\n        )}\r\n        <FormLabel>\r\n          <Input\r\n            type='email'\r\n            name='email'\r\n            placeholder='Your e-mail'\r\n            ref={register({\r\n              required: true,\r\n              pattern: {\r\n                value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\r\n                message: \"invalid email address\",\r\n              },\r\n            })}\r\n            onChange={() => {\r\n              setError(\"email\", {\r\n                type: \"manual\",\r\n                message: \"You have to a email\",\r\n              });\r\n            }}\r\n          />\r\n        </FormLabel>\r\n        {errors.email && errors.email.type === \"required\" && (\r\n          <ErrorSpan>Please provide a email</ErrorSpan>\r\n        )}\r\n        {errors.email && errors.email.type === \"pattern\" && (\r\n          <ErrorSpan>Please provide a correct email</ErrorSpan>\r\n        )}\r\n        <FormLabel>\r\n          <TextInput\r\n            placeholder='Your message...'\r\n            name='message'\r\n            ref={register({ required: true })}\r\n            onChange={() => {\r\n              setError(\"message\", {\r\n                type: \"manual\",\r\n                message: \"You have to provide a message\",\r\n              });\r\n            }}\r\n          ></TextInput>\r\n        </FormLabel>\r\n        {errors.message && errors.message.type === \"required\" && (\r\n          <ErrorSpan>Please provide a message</ErrorSpan>\r\n        )}\r\n       \r\n\r\n        <Button type='submit'>Send</Button>\r\n      </Form>\r\n      {message && (\r\n        <Alert shouldOpen={true} message={message} variant={variant} />\r\n      )}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default ContactForm;\r\n"]},"metadata":{},"sourceType":"module"}