{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\projekty\\\\ecommerce\\\\front\\\\components\\\\ContactForm\\\\index.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useForm } from \"react-hook-form\";\nimport { FormLabel } from \"@material-ui/core\";\nimport Alert from \"../Alert/index.js\";\nvar Wrapper = styled.div.withConfig({\n  displayName: \"ContactForm__Wrapper\",\n  componentId: \"sc-1pug6mx-0\"\n})([\"display:flex;justify-content:center;align-items:center;font-family:\\\"Roboto\\\";background-color:#24272e;@media (min-width:960px){padding:5% 0px;}\"]);\n_c = Wrapper;\nvar Form = styled.form.withConfig({\n  displayName: \"ContactForm__Form\",\n  componentId: \"sc-1pug6mx-1\"\n})([\"display:flex;flex-direction:column;background-color:#24272e;padding:15px 25px;border:0.5px solid (255,255,255,0.8);box-shadow:2px 2px 8px 0 rgb(0 0 0 / 60%);width:100%;height:100%;@media (min-width:960px){padding:40px;min-width:40vw;max-width:500px;}\"]);\n_c2 = Form;\nvar Heading = styled.h3.withConfig({\n  displayName: \"ContactForm__Heading\",\n  componentId: \"sc-1pug6mx-2\"\n})([\"display:block;letter-spacing:2px;color:#5bb2fc;font-family:\\\"Black Ops One\\\",normal;font-weight:500;margin:10px 0;width:100%;text-align:center;\"]);\n_c3 = Heading;\nvar Input = styled.input.withConfig({\n  displayName: \"ContactForm__Input\",\n  componentId: \"sc-1pug6mx-3\"\n})([\"border:none;border-bottom:2px solid white;outline:none;background-color:transparent;color:rgba(255,255,255,0.9);padding:5px;font-size:1em;margin:5px;width:100%;&::placeholder{color:white;}&:focus{outline:1px solid white;}@media (min-width:960px){padding:12px;}\"]);\n_c4 = Input;\nvar TextInput = styled.textarea.withConfig({\n  displayName: \"ContactForm__TextInput\",\n  componentId: \"sc-1pug6mx-4\"\n})([\"border:none;border-bottom:2px solid white;outline:none;background-color:transparent;color:rgba(255,255,255,0.9);padding:5px;font-size:1em;text-decoration:none;font-family:\\\"Roboto\\\";margin:10px 5px;width:100%;resize:none;&::placeholder{color:white;}&:focus{outline:1px solid white;}@media (min-width:960px){padding:12px;min-height:150px;}\"]);\n_c5 = TextInput;\nvar Button = styled.button.withConfig({\n  displayName: \"ContactForm__Button\",\n  componentId: \"sc-1pug6mx-5\"\n})([\"padding:5px 8px;color:white;background-color:transparent;height:100%;border:2px solid white;outline:none;font-size:1em;cursor:pointer;transition:0.5s all linear;align-self:center;@media (min-width:960px){padding:12px;}&:hover,&:focus{background-color:#ff5a5a;}\"]);\n_c6 = Button;\n\nvar ContactForm = function ContactForm() {\n  _s();\n\n  var _useForm = useForm(),\n      register = _useForm.register,\n      handleSubmit = _useForm.handleSubmit,\n      watch = _useForm.watch,\n      errors = _useForm.errors,\n      setError = _useForm.setError;\n\n  var _useState = useState(null),\n      message = _useState[0],\n      setMessage = _useState[1];\n\n  var _useState2 = useState(null),\n      variant = _useState2[0],\n      setVariant = _useState2[1];\n\n  var handleSendEmail = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(data, event) {\n      var request, response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              event.preventDefault();\n              console.log('ess');\n              _context.prev = 2;\n              _context.next = 5;\n              return fetch(\"http://localhost:8080/receiveEmail\", {\n                method: \"POST\",\n                body: JSON.stringify(data),\n                headers: {\n                  \"Content-Type\": \"application/json\"\n                }\n              });\n\n            case 5:\n              request = _context.sent;\n              _context.next = 8;\n              return request.json();\n\n            case 8:\n              response = _context.sent;\n              console.log(response);\n              ;\n\n              if (response.email) {\n                _context.next = 15;\n                break;\n              }\n\n              setMessage(\"Something went wrong, try again\");\n              setVariant(\"error\");\n              return _context.abrupt(\"return\");\n\n            case 15:\n              setMessage(\"Email send\");\n              setVariant(\"success\");\n              _context.next = 22;\n              break;\n\n            case 19:\n              _context.prev = 19;\n              _context.t0 = _context[\"catch\"](2);\n              setMessage(\"Something went wrong, try again\");\n\n            case 22:\n              setTimeout(function () {\n                setMessage(null);\n                setVariant(null);\n              }, 1000);\n\n            case 23:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[2, 19]]);\n    }));\n\n    return function handleSendEmail(_x, _x2) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    id: \"contact\",\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit(handleSendEmail),\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        children: \"Have question?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(FormLabel, {\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          name: \"customerName\",\n          placeholder: \"Your name\",\n          inputRef: register({\n            required: true\n          }),\n          onChange: function onChange() {\n            setError(\"name\", {\n              type: \"manual\",\n              message: \"You have to provide a name\"\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, _this), errors.Name && errors.Name.type === \"required\" && /*#__PURE__*/_jsxDEV(ErrorSpan, {\n        children: \"Please provide a name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(FormLabel, {\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          type: \"email\",\n          name: \"email\",\n          placeholder: \"Your e-mail\",\n          ref: register({\n            required: true,\n            pattern: {\n              value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n              message: \"invalid email address\"\n            }\n          }),\n          onChange: function onChange() {\n            setError(\"email\", {\n              type: \"manual\",\n              message: \"You have to a email\"\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, _this), errors.email && errors.email.type === \"required\" && /*#__PURE__*/_jsxDEV(ErrorSpan, {\n        children: \"Please provide a email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 11\n      }, _this), errors.email && errors.email.type === \"pattern\" && /*#__PURE__*/_jsxDEV(ErrorSpan, {\n        children: \"Please provide a correct email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(FormLabel, {\n        children: /*#__PURE__*/_jsxDEV(TextInput, {\n          placeholder: \"Your message...\",\n          name: \"message\",\n          ref: register({\n            required: true,\n            min: 25\n          }),\n          onChange: function onChange() {\n            setError(\"message\", {\n              type: \"manual\",\n              message: \"You have to provide a message\"\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, _this), errors.message && errors.message.type === \"required\" && /*#__PURE__*/_jsxDEV(ErrorSpan, {\n        children: \"Please provide a message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, _this), message && /*#__PURE__*/_jsxDEV(Alert, {\n      shouldOpen: true,\n      message: message,\n      variant: variant\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 9\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(ContactForm, \"0iKrtQFkr66PcR+doDTdzSkem7M=\", false, function () {\n  return [useForm];\n});\n\n_c7 = ContactForm;\nexport default ContactForm;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"Form\");\n$RefreshReg$(_c3, \"Heading\");\n$RefreshReg$(_c4, \"Input\");\n$RefreshReg$(_c5, \"TextInput\");\n$RefreshReg$(_c6, \"Button\");\n$RefreshReg$(_c7, \"ContactForm\");","map":{"version":3,"sources":["D:/projekty/ecommerce/front/components/ContactForm/index.js"],"names":["React","useState","styled","useForm","FormLabel","Alert","Wrapper","div","Form","form","Heading","h3","Input","input","TextInput","textarea","Button","button","ContactForm","register","handleSubmit","watch","errors","setError","message","setMessage","variant","setVariant","handleSendEmail","data","event","preventDefault","console","log","fetch","method","body","JSON","stringify","headers","request","json","response","email","setTimeout","required","type","Name","pattern","value","min"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { FormLabel } from \"@material-ui/core\";\r\nimport Alert from \"../Alert/index.js\";\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-family: \"Roboto\";\r\n  background-color: #24272e;\r\n\r\n  @media (min-width: 960px) {\r\n    padding: 5% 0px;\r\n  }\r\n`;\r\n\r\nconst Form = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  background-color: #24272e;\r\n  padding: 15px 25px;\r\n  border: 0.5px solid (255, 255, 255, 0.8);\r\n  box-shadow: 2px 2px 8px 0 rgb(0 0 0 / 60%);\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  @media (min-width: 960px) {\r\n    padding: 40px;\r\n    min-width: 40vw;\r\n    max-width: 500px;\r\n  }\r\n`;\r\n\r\nconst Heading = styled.h3`\r\n  display: block;\r\n  letter-spacing: 2px;\r\n  color: #5bb2fc;\r\n  font-family: \"Black Ops One\", normal;\r\n  font-weight: 500;\r\n  margin: 10px 0;\r\n  width: 100%;\r\n  text-align: center;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  border: none;\r\n  border-bottom: 2px solid white;\r\n  outline: none;\r\n  background-color: transparent;\r\n  color: rgba(255, 255, 255, 0.9);\r\n  padding: 5px;\r\n  font-size: 1em;\r\n  margin: 5px;\r\n  width: 100%;\r\n\r\n  &::placeholder {\r\n    color: white;\r\n  }\r\n\r\n  &:focus {\r\n    outline: 1px solid white;\r\n  }\r\n\r\n  @media (min-width: 960px) {\r\n    padding: 12px;\r\n  }\r\n`;\r\n\r\nconst TextInput = styled.textarea`\r\n  border: none;\r\n  border-bottom: 2px solid white;\r\n  outline: none;\r\n  background-color: transparent;\r\n  color: rgba(255, 255, 255, 0.9);\r\n  padding: 5px;\r\n  font-size: 1em;\r\n  text-decoration: none;\r\n  font-family: \"Roboto\";\r\n  margin: 10px 5px;\r\n  width: 100%;\r\n  resize: none;\r\n\r\n  &::placeholder {\r\n    color: white;\r\n  }\r\n\r\n  &:focus {\r\n    outline: 1px solid white;\r\n  }\r\n\r\n  @media (min-width: 960px) {\r\n    padding: 12px;\r\n    min-height: 150px;\r\n  }\r\n`;\r\n\r\nconst Button = styled.button`\r\n  padding: 5px 8px;\r\n  color: white;\r\n  background-color: transparent;\r\n  height: 100%;\r\n  border: 2px solid white;\r\n  outline: none;\r\n  font-size: 1em;\r\n  cursor: pointer;\r\n  transition: 0.5s all linear;\r\n  align-self: center;\r\n\r\n  @media (min-width: 960px) {\r\n    padding: 12px;\r\n  }\r\n\r\n  &:hover,\r\n  &:focus {\r\n    background-color: #ff5a5a;\r\n  }\r\n`;\r\n\r\nconst ContactForm = () => {\r\n  const { register, handleSubmit, watch, errors, setError } = useForm();\r\n  const [message, setMessage] = useState(null);\r\n  const [variant, setVariant] = useState(null);\r\n\r\n  const handleSendEmail = async (data, event) => {\r\n    event.preventDefault();\r\n    console.log('ess')\r\n    try {\r\n      const request = await fetch(\"http://localhost:8080/receiveEmail\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify(data),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n      const response = await request.json();\r\n      console.log(response);;\r\n      if (!response.email) {\r\n        setMessage(\"Something went wrong, try again\");\r\n        setVariant(\"error\");\r\n        return;\r\n      }\r\n      setMessage(\"Email send\");\r\n      setVariant(\"success\");\r\n    } catch (err) {\r\n      setMessage(\"Something went wrong, try again\");\r\n    }\r\n\r\n    setTimeout(() => {\r\n      setMessage(null);\r\n      setVariant(null);\r\n    }, 1000);\r\n  };\r\n\r\n  return (\r\n    <Wrapper id='contact'>\r\n      <Form onSubmit={handleSubmit(handleSendEmail)}>\r\n        <Heading>Have question?</Heading>\r\n        <FormLabel>\r\n          <Input\r\n            type='text'\r\n            name='customerName'\r\n            placeholder='Your name'\r\n            inputRef={register({ required: true })}\r\n            onChange={() => {\r\n              setError(\"name\", {\r\n                type: \"manual\",\r\n                message: \"You have to provide a name\",\r\n              });\r\n            }}\r\n          />\r\n        </FormLabel>\r\n        {errors.Name && errors.Name.type === \"required\" && (\r\n          <ErrorSpan>Please provide a name</ErrorSpan>\r\n        )}\r\n        <FormLabel>\r\n          <Input\r\n            type='email'\r\n            name='email'\r\n            placeholder='Your e-mail'\r\n            ref={register({\r\n              required: true,\r\n              pattern: {\r\n                value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\r\n                message: \"invalid email address\",\r\n              },\r\n            })}\r\n            onChange={() => {\r\n              setError(\"email\", {\r\n                type: \"manual\",\r\n                message: \"You have to a email\",\r\n              });\r\n            }}\r\n          />\r\n        </FormLabel>\r\n        {errors.email && errors.email.type === \"required\" && (\r\n          <ErrorSpan>Please provide a email</ErrorSpan>\r\n        )}\r\n        {errors.email && errors.email.type === \"pattern\" && (\r\n          <ErrorSpan>Please provide a correct email</ErrorSpan>\r\n        )}\r\n        <FormLabel>\r\n          <TextInput\r\n            placeholder='Your message...'\r\n            name='message'\r\n            ref={register({ required: true, min: 25 })}\r\n            onChange={() => {\r\n              setError(\"message\", {\r\n                type: \"manual\",\r\n                message: \"You have to provide a message\",\r\n              });\r\n            }}\r\n          ></TextInput>\r\n        </FormLabel>\r\n        {errors.message && errors.message.type === \"required\" && (\r\n          <ErrorSpan>Please provide a message</ErrorSpan>\r\n        )}\r\n\r\n        <Button type='submit'>Send</Button>\r\n      </Form>\r\n      {message && (\r\n        <Alert shouldOpen={true} message={message} variant={variant} />\r\n      )}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default ContactForm;\r\n"]},"metadata":{},"sourceType":"module"}