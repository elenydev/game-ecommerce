{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\projekty\\\\ecommerce\\\\front\\\\components\\\\AddProductForm\\\\index.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useForm } from \"react-hook-form\";\nimport Input from \"@material-ui/core/Input\";\nimport { FormLabel, Button, Checkbox } from \"@material-ui/core\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport PhotoCamera from \"@material-ui/icons/PhotoCamera\";\nimport Select from \"@material-ui/core/Select\";\nvar Form = styled.form.withConfig({\n  displayName: \"AddProductForm__Form\",\n  componentId: \"sc-108fhvp-0\"\n})([\"display:flex;width:100%;height:100%;flex-direction:column;justify-content:space-between;align-items:center;color:white;& > .MuiButton-containedSecondary{margin:15px;background-color:#b73d1cbf;&:hover{background-color:#ff3600bf;}}& > .MuiFormLabel-root{color:white;}& > .hidden{display:none;}& > label > .MuiIconButton-colorPrimary{color:#ff3600bf !important;}\"]);\n_c = Form;\nvar ErrorSpan = styled.span.withConfig({\n  displayName: \"AddProductForm__ErrorSpan\",\n  componentId: \"sc-108fhvp-1\"\n})([\"color:#ff5a5a;font-size:12px;& > a{cursor:pointer;}\"]);\n_c2 = ErrorSpan;\nvar Header = styled.h2.withConfig({\n  displayName: \"AddProductForm__Header\",\n  componentId: \"sc-108fhvp-2\"\n})([\"display:flex;font-weight:700;width:100%;padding:10px;justify-content:center;color:rgb(255 90 90 /60%);\"]);\n_c3 = Header;\nvar InputElement = styled(Input).withConfig({\n  displayName: \"AddProductForm__InputElement\",\n  componentId: \"sc-108fhvp-3\"\n})([\"margin:8px 0;color:white;& > .MuiInputBase-input{color:white;}\"]);\n_c4 = InputElement;\nvar defaultValues = {\n  firstName: null,\n  lastName: null,\n  email: null,\n  password: null,\n  avatar: null,\n  policy: null\n};\n\nvar AddProductForm = function AddProductForm() {\n  _s();\n\n  var _useForm = useForm({\n    defaultValues: defaultValues\n  }),\n      register = _useForm.register,\n      handleSubmit = _useForm.handleSubmit,\n      errors = _useForm.errors,\n      setError = _useForm.setError,\n      reset = _useForm.reset;\n\n  var _useState = useState(null),\n      responseType = _useState[0],\n      setResponseType = _useState[1];\n\n  var clearAlert = function clearAlert() {\n    return setTimeout(function () {\n      return setResponseType(null);\n    }, 999);\n  };\n\n  var registerUser = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(data, event) {\n      var firstName, lastName, email, password, avatar, policy, user, send, response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              event.preventDefault();\n              firstName = data.firstName, lastName = data.lastName, email = data.email, password = data.password, avatar = data.avatar, policy = data.policy;\n              user = new FormData();\n              user.append(\"firstName\", firstName);\n              user.append(\"lastName\", lastName);\n              user.append(\"email\", email);\n              user.append(\"password\", password);\n              user.append(\"avatar\", avatar[0]);\n              user.append(\"policy\", policy);\n              _context.prev = 9;\n              _context.next = 12;\n              return fetch(\"http://localhost:8080/addProduct\", {\n                method: \"POST\",\n                body: user\n              });\n\n            case 12:\n              send = _context.sent;\n              _context.next = 15;\n              return send.json();\n\n            case 15:\n              response = _context.sent;\n\n              if (response) {\n                setResponseType(response);\n\n                if (response.product) {\n                  reset();\n                }\n              }\n\n              _context.next = 22;\n              break;\n\n            case 19:\n              _context.prev = 19;\n              _context.t0 = _context[\"catch\"](9);\n              setResponseType({\n                message: \"Some error occured, try again\"\n              });\n\n            case 22:\n              clearAlert();\n\n            case 23:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[9, 19]]);\n    }));\n\n    return function registerUser(_x, _x2) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      children: \"Add product\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit(registerUser),\n      encType: \"\",\n      children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n        children: /*#__PURE__*/_jsxDEV(InputElement, {\n          type: \"text\",\n          name: \"productName\",\n          placeholder: \"Product Name\",\n          inputRef: register({\n            required: true\n          }),\n          onChange: function onChange() {\n            setError(\"productName\", {\n              type: \"manual\",\n              message: \"You have to provide a product name\"\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, _this), errors.productName && errors.productName.type === \"required\" && /*#__PURE__*/_jsxDEV(ErrorSpan, {\n        children: \"Please provide a product name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(FormLabel, {\n        children: /*#__PURE__*/_jsxDEV(InputElement, {\n          type: \"text\",\n          name: \"productDescription\",\n          placeholder: \"Product Description\",\n          inputRef: register({\n            required: true\n          }),\n          onChange: function onChange() {\n            setError(\"productDescription\", {\n              type: \"manual\",\n              message: \"You have to provide a product description\"\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, _this), errors.productDescription && errors.productDescription.type === \"required\" && /*#__PURE__*/_jsxDEV(ErrorSpan, {\n        children: \"Please provide a product description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 13\n      }, _this), /*#__PURE__*/_jsxDEV(FormLabel, {\n        children: /*#__PURE__*/_jsxDEV(InputElement, {\n          type: \"text\",\n          name: \"email\",\n          placeholder: \"Enter email\",\n          inputRef: register({\n            required: true,\n            pattern: {\n              value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n              message: \"invalid email address\"\n            }\n          }),\n          onChange: function onChange() {\n            setError(\"email\", {\n              type: \"manual\",\n              message: \"You have to a email\"\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, _this), errors.email && errors.email.type === \"required\" && /*#__PURE__*/_jsxDEV(ErrorSpan, {\n        children: \"Please provide a email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 11\n      }, _this), errors.email && errors.email.type === \"pattern\" && /*#__PURE__*/_jsxDEV(ErrorSpan, {\n        children: \"Please provide a correct email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(FormLabel, {\n        children: /*#__PURE__*/_jsxDEV(InputElement, {\n          type: \"number\",\n          name: \"prize\",\n          placeholder: \"Enter prize\",\n          inputRef: register({\n            required: true\n          }),\n          onChange: function onChange() {\n            setError(\"prize\", {\n              type: \"manual\",\n              message: \"You have to provide a prize\"\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, _this), errors.prize && errors.prize.type === \"required\" && /*#__PURE__*/_jsxDEV(ErrorSpan, {\n        children: \"Please provide a prize\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(FormLabel, {\n        children: /*#__PURE__*/_jsxDEV(InputElement, {\n          type: \"number\",\n          name: \"amount\",\n          placeholder: \"Enter amount of products \",\n          inputRef: register({\n            required: true,\n            minValue: 5\n          }),\n          onChange: function onChange() {\n            setError(\"amount\", {\n              type: \"manual\",\n              message: \"You have to provide amount of products\"\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, _this), errors.amount && errors.amount.type === \"required\" && /*#__PURE__*/_jsxDEV(ErrorSpan, {\n        children: \"Please provide a amount of products\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: register({\n          required: true\n        }),\n        name: \"productImg\",\n        type: \"file\",\n        accept: \".png, .jpg, .jpeg\",\n        id: \"productImg\",\n        className: \"hidden\",\n        onChange: function onChange(e) {\n          setError(\"productImg\", {\n            type: \"manual\",\n            message: \"You have to provide an product image\"\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"productImg\",\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          color: \"primary\",\n          \"aria-label\": \"upload picture\",\n          component: \"span\",\n          children: /*#__PURE__*/_jsxDEV(PhotoCamera, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, _this), errors.productImg && errors.productImg.type === \"required\" && /*#__PURE__*/_jsxDEV(ErrorSpan, {\n        children: \"Please provide a product image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        color: \"secondary\",\n        children: \"Create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(AddProductForm, \"mJUUbHIGc/XJMj+vjYWN5OsfeUc=\", false, function () {\n  return [useForm];\n});\n\n_c5 = AddProductForm;\nexport default AddProductForm;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"Form\");\n$RefreshReg$(_c2, \"ErrorSpan\");\n$RefreshReg$(_c3, \"Header\");\n$RefreshReg$(_c4, \"InputElement\");\n$RefreshReg$(_c5, \"AddProductForm\");","map":{"version":3,"sources":["D:/projekty/ecommerce/front/components/AddProductForm/index.js"],"names":["React","useState","styled","useForm","Input","FormLabel","Button","Checkbox","IconButton","PhotoCamera","Select","Form","form","ErrorSpan","span","Header","h2","InputElement","defaultValues","firstName","lastName","email","password","avatar","policy","AddProductForm","register","handleSubmit","errors","setError","reset","responseType","setResponseType","clearAlert","setTimeout","registerUser","data","event","preventDefault","user","FormData","append","fetch","method","body","send","json","response","product","message","required","type","productName","productDescription","pattern","value","prize","minValue","amount","e","productImg"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport { FormLabel, Button, Checkbox } from \"@material-ui/core\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport PhotoCamera from \"@material-ui/icons/PhotoCamera\";\r\nimport Select from \"@material-ui/core/Select\";\r\n\r\nconst Form = styled.form`\r\n  display: flex;\r\n  width: 100%;\r\n  height: 100%;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  color: white;\r\n\r\n  & > .MuiButton-containedSecondary {\r\n    margin: 15px;\r\n    background-color: #b73d1cbf;\r\n\r\n    &:hover {\r\n      background-color: #ff3600bf;\r\n    }\r\n  }\r\n\r\n  & > .MuiFormLabel-root {\r\n    color: white;\r\n  }\r\n\r\n  & > .hidden {\r\n    display: none;\r\n  }\r\n\r\n  & > label > .MuiIconButton-colorPrimary {\r\n    color: #ff3600bf !important;\r\n  }\r\n`;\r\n\r\nconst ErrorSpan = styled.span`\r\n  color: #ff5a5a;\r\n  font-size: 12px;\r\n\r\n  & > a {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst Header = styled.h2`\r\n  display: flex;\r\n  font-weight: 700;\r\n  width: 100%;\r\n  padding: 10px;\r\n  justify-content: center;\r\n  color: rgb(255 90 90 /60%);\r\n`;\r\n\r\nconst InputElement = styled(Input)`\r\n  margin: 8px 0;\r\n  color: white;\r\n\r\n  & > .MuiInputBase-input {\r\n    color: white;\r\n  }\r\n`;\r\n\r\nconst defaultValues = {\r\n  firstName: null,\r\n  lastName: null,\r\n  email: null,\r\n  password: null,\r\n  avatar: null,\r\n  policy: null,\r\n};\r\n\r\nconst AddProductForm = () => {\r\n  const { register, handleSubmit, errors, setError, reset } = useForm({\r\n    defaultValues,\r\n  });\r\n\r\n  const [responseType, setResponseType] = useState(null);\r\n  const clearAlert = () => setTimeout(() => setResponseType(null), 999);\r\n\r\n  const registerUser = async (data, event) => {\r\n    event.preventDefault();\r\n    const { firstName, lastName, email, password, avatar, policy } = data;\r\n\r\n    const user = new FormData();\r\n    user.append(\"firstName\", firstName);\r\n    user.append(\"lastName\", lastName);\r\n    user.append(\"email\", email);\r\n    user.append(\"password\", password);\r\n    user.append(\"avatar\", avatar[0]);\r\n    user.append(\"policy\", policy);\r\n\r\n    try {\r\n      const send = await fetch(\"http://localhost:8080/addProduct\", {\r\n        method: \"POST\",\r\n        body: user,\r\n      });\r\n      const response = await send.json();\r\n      if (response) {\r\n        setResponseType(response);\r\n        if (response.product) {\r\n          reset();\r\n        }\r\n      }\r\n    } catch (err) {\r\n      setResponseType({ message: \"Some error occured, try again\" });\r\n    }\r\n    clearAlert();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Header>Add product</Header>\r\n      <Form onSubmit={handleSubmit(registerUser)} encType=''>\r\n        <FormLabel>\r\n          <InputElement\r\n            type='text'\r\n            name='productName'\r\n            placeholder='Product Name'\r\n            inputRef={register({ required: true })}\r\n            onChange={() => {\r\n              setError(\"productName\", {\r\n                type: \"manual\",\r\n                message: \"You have to provide a product name\",\r\n              });\r\n            }}\r\n          />\r\n        </FormLabel>\r\n        {errors.productName && errors.productName.type === \"required\" && (\r\n          <ErrorSpan>Please provide a product name</ErrorSpan>\r\n        )}\r\n\r\n        <FormLabel>\r\n          <InputElement\r\n            type='text'\r\n            name='productDescription'\r\n            placeholder='Product Description'\r\n            inputRef={register({ required: true })}\r\n            onChange={() => {\r\n              setError(\"productDescription\", {\r\n                type: \"manual\",\r\n                message: \"You have to provide a product description\",\r\n              });\r\n            }}\r\n          />\r\n        </FormLabel>\r\n        {errors.productDescription &&\r\n          errors.productDescription.type === \"required\" && (\r\n            <ErrorSpan>Please provide a product description</ErrorSpan>\r\n          )}\r\n\r\n        <FormLabel>\r\n          <InputElement\r\n            type='text'\r\n            name='email'\r\n            placeholder='Enter email'\r\n            inputRef={register({\r\n              required: true,\r\n              pattern: {\r\n                value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\r\n                message: \"invalid email address\",\r\n              },\r\n            })}\r\n            onChange={() => {\r\n              setError(\"email\", {\r\n                type: \"manual\",\r\n                message: \"You have to a email\",\r\n              });\r\n            }}\r\n          />\r\n        </FormLabel>\r\n        {errors.email && errors.email.type === \"required\" && (\r\n          <ErrorSpan>Please provide a email</ErrorSpan>\r\n        )}\r\n        {errors.email && errors.email.type === \"pattern\" && (\r\n          <ErrorSpan>Please provide a correct email</ErrorSpan>\r\n        )}\r\n\r\n        <FormLabel>\r\n          <InputElement\r\n            type='number'\r\n            name='prize'\r\n            placeholder='Enter prize'\r\n            inputRef={register({ required: true })}\r\n            onChange={() => {\r\n              setError(\"prize\", {\r\n                type: \"manual\",\r\n                message: \"You have to provide a prize\",\r\n              });\r\n            }}\r\n          />\r\n        </FormLabel>\r\n        {errors.prize && errors.prize.type === \"required\" && (\r\n          <ErrorSpan>Please provide a prize</ErrorSpan>\r\n        )}\r\n\r\n        <FormLabel>\r\n          <InputElement\r\n            type='number'\r\n            name='amount'\r\n            placeholder='Enter amount of products '\r\n            inputRef={register({ required: true, minValue: 5 })}\r\n            onChange={() => {\r\n              setError(\"amount\", {\r\n                type: \"manual\",\r\n                message: \"You have to provide amount of products\",\r\n              });\r\n            }}\r\n          />\r\n        </FormLabel>\r\n        {errors.amount && errors.amount.type === \"required\" && (\r\n          <ErrorSpan>Please provide a amount of products</ErrorSpan>\r\n        )}\r\n\r\n        <input\r\n          ref={register({ required: true })}\r\n          name='productImg'\r\n          type='file'\r\n          accept='.png, .jpg, .jpeg'\r\n          id='productImg'\r\n          className='hidden'\r\n          onChange={(e) => {\r\n            setError(\"productImg\", {\r\n              type: \"manual\",\r\n              message: \"You have to provide an product image\",\r\n            });\r\n          }}\r\n        />\r\n        <label htmlFor='productImg'>\r\n          <IconButton\r\n            color='primary'\r\n            aria-label='upload picture'\r\n            component='span'\r\n          >\r\n            <PhotoCamera />\r\n          </IconButton>\r\n        </label>\r\n        {errors.productImg && errors.productImg.type === \"required\" && (\r\n          <ErrorSpan>Please provide a product image</ErrorSpan>\r\n        )}\r\n\r\n        <Button type='submit' variant='contained' color='secondary'>\r\n          Create\r\n        </Button>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddProductForm;\r\n"]},"metadata":{},"sourceType":"module"}