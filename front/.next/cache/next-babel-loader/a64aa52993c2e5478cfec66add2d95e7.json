{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\projekty\\\\ecommerce\\\\front\\\\components\\\\RegisterForm\\\\index.js\";\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useForm } from \"react-hook-form\";\nimport Input from \"@material-ui/core/Input\";\nimport { FormLabel, Button, Checkbox } from \"@material-ui/core\";\nimport Link from \"next/link\";\nimport Alert from \"../Alert/index\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport PhotoCamera from \"@material-ui/icons/PhotoCamera\";\nconst Wrapper = styled.div.withConfig({\n  displayName: \"RegisterForm__Wrapper\",\n  componentId: \"sc-1ngtmd-0\"\n})([\"display:flex;align-items:center;flex-direction:column;justify-content:space-between;min-width:35vw;max-width:500px;min-height:40vh;padding:10px;color:white;box-shadow:2px 2px 8px 0 rgb(0 0 0 / 60%);background-color:rgba(0,0,0,0.3);\"]);\nconst Form = styled.form.withConfig({\n  displayName: \"RegisterForm__Form\",\n  componentId: \"sc-1ngtmd-1\"\n})([\"display:flex;width:100%;height:100%;flex-direction:column;justify-content:space-between;align-items:center;color:white;& > .MuiButton-containedSecondary{margin:15px;background-color:#b73d1cbf;&:hover{background-color:#ff3600bf;}}& > .MuiFormLabel-root{color:white;}& > .hidden{display:none;}& > label > .MuiIconButton-colorPrimary{color:#ff3600bf !important;}\"]);\nconst ErrorSpan = styled.span.withConfig({\n  displayName: \"RegisterForm__ErrorSpan\",\n  componentId: \"sc-1ngtmd-2\"\n})([\"color:red;font-size:12px;\"]);\nconst Header = styled.h2.withConfig({\n  displayName: \"RegisterForm__Header\",\n  componentId: \"sc-1ngtmd-3\"\n})([\"display:flex;font-weight:700;\"]);\nconst InputElement = styled(Input).withConfig({\n  displayName: \"RegisterForm__InputElement\",\n  componentId: \"sc-1ngtmd-4\"\n})([\"margin:8px 0;color:white;& > .MuiInputBase-input{color:white;}\"]);\nconst CheckBox = styled(FormLabel).withConfig({\n  displayName: \"RegisterForm__CheckBox\",\n  componentId: \"sc-1ngtmd-5\"\n})([\"display:flex;align-items:center;justify-content:center;flex-direction:column;margin:15px 0;& > .MuiCheckbox-root{color:#b73d1cbf;}& > .MuiCheckbox-colorSecondary.Mui-checked{color:#b73d1cbf;}\"]);\nconst defaultValues = {\n  firstName: null,\n  lastName: null,\n  email: null,\n  password: null,\n  policy: false,\n  avatar: null\n};\n\nconst RegisterForm = () => {\n  const {\n    register,\n    handleSubmit,\n    errors,\n    setError,\n    reset\n  } = useForm({\n    defaultValues\n  });\n  const {\n    0: file,\n    1: setFile\n  } = useState(null);\n\n  const registerUser = (data, event) => {\n    event.preventDefault();\n    console.log(data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      children: \"Create an account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit(registerUser),\n      children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n        children: /*#__PURE__*/_jsxDEV(InputElement, {\n          type: \"text\",\n          name: \"firstName\",\n          placeholder: \"First Name\",\n          inputRef: register({\n            required: true\n          }),\n          onChange: () => {\n            setError(\"firstName\", {\n              type: \"manual\",\n              message: \"You have to provide a first name\"\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), errors.firstName && errors.firstName.type === \"required\" && /*#__PURE__*/_jsxDEV(ErrorSpan, {\n        children: \"Please provide a first name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n        children: /*#__PURE__*/_jsxDEV(InputElement, {\n          type: \"text\",\n          name: \"lastName\",\n          placeholder: \"Last Name\",\n          inputRef: register({\n            required: true\n          }),\n          onChange: () => {\n            setError(\"lastName\", {\n              type: \"manual\",\n              message: \"You have to provide a last name\"\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), errors.lastName && errors.lastName.type === \"required\" && /*#__PURE__*/_jsxDEV(ErrorSpan, {\n        children: \"Please provide a last name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n        children: /*#__PURE__*/_jsxDEV(InputElement, {\n          type: \"text\",\n          name: \"email\",\n          placeholder: \"Enter email\",\n          inputRef: register({\n            required: true,\n            pattern: {\n              value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n              message: \"invalid email address\"\n            }\n          }),\n          onChange: () => {\n            setError(\"email\", {\n              type: \"manual\",\n              message: \"You have to a email\"\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), errors.email && errors.email.type === \"required\" && /*#__PURE__*/_jsxDEV(ErrorSpan, {\n        children: \"Please provide a email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 11\n      }, this), errors.email && errors.email.type === \"pattern\" && /*#__PURE__*/_jsxDEV(ErrorSpan, {\n        children: \"Please provide a correct email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n        children: /*#__PURE__*/_jsxDEV(InputElement, {\n          type: \"password\",\n          name: \"password\",\n          placeholder: \"Enter Password\",\n          inputRef: register({\n            required: true\n          }),\n          onChange: () => {\n            setError(\"password\", {\n              type: \"manual\",\n              message: \"You have to provide a password\"\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this), errors.password && errors.password.type === \"required\" && /*#__PURE__*/_jsxDEV(ErrorSpan, {\n        children: \"Please provide a password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(InputElement, {\n        type: \"file\",\n        name: \"avatar\",\n        id: \"avatar\",\n        accept: \"image/*\",\n        className: \"hidden\",\n        inputRef: register({\n          required: true\n        }),\n        onChange: () => {\n          setError(\"picture\", {\n            type: \"manual\",\n            message: \"You have to provide an avatar\"\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"avatar\",\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          color: \"primary\",\n          \"aria-label\": \"upload picture\",\n          component: \"span\",\n          children: /*#__PURE__*/_jsxDEV(PhotoCamera, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this), errors.avatar && errors.avatar.type === \"required\" && /*#__PURE__*/_jsxDEV(ErrorSpan, {\n        children: \"Please provide an avatar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(CheckBox, {\n        children: [\" \", \"You have to accept our\", \" \", /*#__PURE__*/_jsxDEV(Link, {\n          href: \"/privacy\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            children: \"Privacy Policy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Checkbox, {\n          name: \"policy\",\n          inputRef: register({\n            required: true\n          }),\n          onChange: () => {\n            setError(\"policy\", {\n              type: \"manual\",\n              message: \"You have accept our privacy policy \"\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this), errors.policy && errors.policy.type === \"required\" && /*#__PURE__*/_jsxDEV(ErrorSpan, {\n          children: \"Please accept our privacy policy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        color: \"secondary\",\n        children: \"Create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n};\n\nexport default RegisterForm;","map":{"version":3,"sources":["D:/projekty/ecommerce/front/components/RegisterForm/index.js"],"names":["React","useState","styled","useForm","Input","FormLabel","Button","Checkbox","Link","Alert","IconButton","PhotoCamera","Wrapper","div","Form","form","ErrorSpan","span","Header","h2","InputElement","CheckBox","defaultValues","firstName","lastName","email","password","policy","avatar","RegisterForm","register","handleSubmit","errors","setError","reset","file","setFile","registerUser","data","event","preventDefault","console","log","required","type","message","pattern","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport { FormLabel, Button, Checkbox } from \"@material-ui/core\";\r\nimport Link from \"next/link\";\r\nimport Alert from \"../Alert/index\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport PhotoCamera from \"@material-ui/icons/PhotoCamera\";\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  min-width: 35vw;\r\n  max-width: 500px;\r\n  min-height: 40vh;\r\n  padding: 10px;\r\n  color: white;\r\n  box-shadow: 2px 2px 8px 0 rgb(0 0 0 / 60%);\r\n  background-color: rgba(0, 0, 0, 0.3);\r\n`;\r\n\r\nconst Form = styled.form`\r\n  display: flex;\r\n  width: 100%;\r\n  height: 100%;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  color: white;\r\n\r\n  & > .MuiButton-containedSecondary {\r\n    margin: 15px;\r\n    background-color: #b73d1cbf;\r\n\r\n    &:hover {\r\n      background-color: #ff3600bf;\r\n    }\r\n  }\r\n\r\n  & > .MuiFormLabel-root {\r\n    color: white;\r\n  }\r\n\r\n  & > .hidden {\r\n    display: none;\r\n  }\r\n\r\n  & > label > .MuiIconButton-colorPrimary {\r\n    color: #ff3600bf !important;\r\n  }\r\n`;\r\n\r\nconst ErrorSpan = styled.span`\r\n  color: red;\r\n  font-size: 12px;\r\n`;\r\n\r\nconst Header = styled.h2`\r\n  display: flex;\r\n  font-weight: 700;\r\n`;\r\n\r\nconst InputElement = styled(Input)`\r\n  margin: 8px 0;\r\n  color: white;\r\n\r\n  & > .MuiInputBase-input {\r\n    color: white;\r\n  }\r\n`;\r\n\r\nconst CheckBox = styled(FormLabel)`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  margin: 15px 0;\r\n\r\n  & > .MuiCheckbox-root {\r\n    color: #b73d1cbf;\r\n  }\r\n\r\n  & > .MuiCheckbox-colorSecondary.Mui-checked {\r\n    color: #b73d1cbf;\r\n  }\r\n`;\r\n\r\nconst defaultValues = {\r\n  firstName: null,\r\n  lastName: null,\r\n  email: null,\r\n  password: null,\r\n  policy: false,\r\n  avatar: null,\r\n};\r\n\r\nconst RegisterForm = () => {\r\n  const { register, handleSubmit, errors, setError, reset } = useForm({\r\n    defaultValues,\r\n  });\r\n\r\n  const [file, setFile] = useState(null);\r\n\r\n  const registerUser = (data, event) => {\r\n    event.preventDefault();\r\n    console.log(data);\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Header>Create an account</Header>\r\n\r\n      <Form onSubmit={handleSubmit(registerUser)}>\r\n        <FormLabel>\r\n          <InputElement\r\n            type='text'\r\n            name='firstName'\r\n            placeholder='First Name'\r\n            inputRef={register({ required: true })}\r\n            onChange={() => {\r\n              setError(\"firstName\", {\r\n                type: \"manual\",\r\n                message: \"You have to provide a first name\",\r\n              });\r\n            }}\r\n          />\r\n        </FormLabel>\r\n        {errors.firstName && errors.firstName.type === \"required\" && (\r\n          <ErrorSpan>Please provide a first name</ErrorSpan>\r\n        )}\r\n        <FormLabel>\r\n          <InputElement\r\n            type='text'\r\n            name='lastName'\r\n            placeholder='Last Name'\r\n            inputRef={register({ required: true })}\r\n            onChange={() => {\r\n              setError(\"lastName\", {\r\n                type: \"manual\",\r\n                message: \"You have to provide a last name\",\r\n              });\r\n            }}\r\n          />\r\n        </FormLabel>\r\n        {errors.lastName && errors.lastName.type === \"required\" && (\r\n          <ErrorSpan>Please provide a last name</ErrorSpan>\r\n        )}\r\n        <FormLabel>\r\n          <InputElement\r\n            type='text'\r\n            name='email'\r\n            placeholder='Enter email'\r\n            inputRef={register({\r\n              required: true,\r\n              pattern: {\r\n                value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\r\n                message: \"invalid email address\",\r\n              },\r\n            })}\r\n            onChange={() => {\r\n              setError(\"email\", {\r\n                type: \"manual\",\r\n                message: \"You have to a email\",\r\n              });\r\n            }}\r\n          />\r\n        </FormLabel>\r\n        {errors.email && errors.email.type === \"required\" && (\r\n          <ErrorSpan>Please provide a email</ErrorSpan>\r\n        )}\r\n        {errors.email && errors.email.type === \"pattern\" && (\r\n          <ErrorSpan>Please provide a correct email</ErrorSpan>\r\n        )}\r\n        <FormLabel>\r\n          <InputElement\r\n            type='password'\r\n            name='password'\r\n            placeholder='Enter Password'\r\n            inputRef={register({ required: true })}\r\n            onChange={() => {\r\n              setError(\"password\", {\r\n                type: \"manual\",\r\n                message: \"You have to provide a password\",\r\n              });\r\n            }}\r\n          />\r\n        </FormLabel>\r\n        {errors.password && errors.password.type === \"required\" && (\r\n          <ErrorSpan>Please provide a password</ErrorSpan>\r\n        )}\r\n        <InputElement\r\n          type='file'\r\n          name='avatar'\r\n          id='avatar'\r\n          accept='image/*'\r\n          className='hidden'\r\n          inputRef={register({ required: true })}\r\n          onChange={() => {\r\n            setError(\"picture\", {\r\n              type: \"manual\",\r\n              message: \"You have to provide an avatar\",\r\n            });\r\n          }}\r\n        />\r\n        <label htmlFor='avatar'>\r\n          <IconButton\r\n            color='primary'\r\n            aria-label='upload picture'\r\n            component='span'\r\n          >\r\n            <PhotoCamera />\r\n          </IconButton>\r\n        </label>\r\n        {errors.avatar && errors.avatar.type === \"required\" && (\r\n          <ErrorSpan>Please provide an avatar</ErrorSpan>\r\n        )}\r\n        <CheckBox>\r\n          {\" \"}\r\n          You have to accept our{\" \"}\r\n          <Link href='/privacy'>\r\n            <a>Privacy Policy</a>\r\n          </Link>\r\n          <Checkbox\r\n            name='policy'\r\n            inputRef={register({ required: true })}\r\n            onChange={() => {\r\n              setError(\"policy\", {\r\n                type: \"manual\",\r\n                message: \"You have accept our privacy policy \",\r\n              });\r\n            }}\r\n          />\r\n          {errors.policy && errors.policy.type === \"required\" && (\r\n            <ErrorSpan>Please accept our privacy policy</ErrorSpan>\r\n          )}\r\n        </CheckBox>\r\n\r\n        <Button type='submit' variant='contained' color='secondary'>\r\n          Create\r\n        </Button>\r\n      </Form>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default RegisterForm;\r\n"]},"metadata":{},"sourceType":"module"}