{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\projekty\\\\ecommerce\\\\front\\\\components\\\\OfferProduct\\\\index.js\";\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { Button } from \"@material-ui/core\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addProductToCart, selectProducts } from \"../../Reducers/productsSlice.js\";\nconst Card = styled.div.withConfig({\n  displayName: \"OfferProduct__Card\",\n  componentId: \"sc-1juzz0q-0\"\n})([\"display:flex;flex-direction:column;box-shadow:2px 2px 8px 0 rgb(0 0 0 / 60%);background:#24272e;transition:0.2s all linear;border:1px solid transparent;& > span{display:flex;align-items:center;justify-content:center;}& > span > .MuiButton-containedSecondary{margin:15px;background-color:#5bb2fc;width:fit-content;align-self:center;transition:0.5s all linear;margin-top:auto;&:hover{background-color:#ff3600bf;}}& > span > .MuiButton-contained.Mui-disabled{background-color:#0b3558;color:rgba(255,255,255,0.6);}@media (min-width:960px){max-width:300px;}&:hover{transform:scale(1.05);border:1px solid #ff5a5a;}\"]);\nconst CardImage = styled.div.withConfig({\n  displayName: \"OfferProduct__CardImage\",\n  componentId: \"sc-1juzz0q-1\"\n})([\"display:flex;height:200px;width:auto;img{width:100%;height:auto;}@media (min-width:960px){height:280px;width:auto;}\"]);\nconst CardContentContainer = styled.div.withConfig({\n  displayName: \"OfferProduct__CardContentContainer\",\n  componentId: \"sc-1juzz0q-2\"\n})([\"display:flex;flex-direction:column;padding:7px;color:rgba(255,255,255,0.8);justify-content:space-between;font-family:\\\"Roboto\\\";flex:1;@media (min-width:960px){padding:12px;}\"]);\nconst CardContentHeader = styled.h4.withConfig({\n  displayName: \"OfferProduct__CardContentHeader\",\n  componentId: \"sc-1juzz0q-3\"\n})([\"width:100%;font-size:1.4em;font-family:\\\"Black Ops One\\\",normal;font-weight:500;margin-top:5px;\"]);\nconst CardContentDescription = styled.p.withConfig({\n  displayName: \"OfferProduct__CardContentDescription\",\n  componentId: \"sc-1juzz0q-4\"\n})([\"display:block;width:100%;margin:8px 0px;word-break:break-word;font-family:\\\"Black Ops One\\\",normal;font-weight:500;\"]);\nconst CardContentInfoWrapper = styled.div.withConfig({\n  displayName: \"OfferProduct__CardContentInfoWrapper\",\n  componentId: \"sc-1juzz0q-5\"\n})([\"display:flex;width:100%;margin:10px 0;font-size:1.3em;font-family:\\\"Black Ops One\\\",normal;font-weight:500;\"]);\nconst CardContentType = styled.p.withConfig({\n  displayName: \"OfferProduct__CardContentType\",\n  componentId: \"sc-1juzz0q-6\"\n})([\"display:flex;width:65%;\"]);\nconst CardContentPrize = styled.p.withConfig({\n  displayName: \"OfferProduct__CardContentPrize\",\n  componentId: \"sc-1juzz0q-7\"\n})([\"display:flex;width:35%;justify-content:flex-end;\"]);\nconst OfferProduct = /*#__PURE__*/React.memo(({\n  product,\n  user,\n  setVariant,\n  setMessage\n}) => {\n  const {\n    productName,\n    productDescription,\n    gameType,\n    prize,\n    productImg\n  } = product;\n  const {\n    0: buttonDisabled,\n    1: setButtonDisabled\n  } = useState(true);\n  const dispatch = useDispatch();\n  const cardProducts = useSelector(selectProducts).products;\n  useEffect(() => {\n    let isMounted = true;\n\n    if (user.user !== null) {\n      setButtonDisabled(false);\n    } else {\n      setButtonDisabled(true);\n    }\n\n    return () => {\n      isMounted = false;\n    };\n  }, [user]);\n\n  const addProduct = () => {\n    if (!cardProducts.includes(product)) {\n      setMessage(\"Product added to cart\");\n      setVariant(\"success\");\n      dispatch(addProductToCart(product));\n      return;\n    }\n\n    setMessage(\"Product already in card\");\n    setVariant(\"error\");\n    setTimeout(() => {\n      setMessage(null);\n      setVariant(null);\n    }, 1000);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: [\"  \", /*#__PURE__*/_jsxDEV(CardImage, {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: `http://localhost:8080/${productImg}`,\n          alt: productName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(CardContentContainer, {\n        children: [/*#__PURE__*/_jsxDEV(CardContentHeader, {\n          children: productName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardContentDescription, {\n          children: productDescription\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardContentInfoWrapper, {\n          children: [/*#__PURE__*/_jsxDEV(CardContentType, {\n            children: gameType\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CardContentPrize, {\n            children: [prize, \" $\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n        title: buttonDisabled ? \"Sing in to buy product\" : \"\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"secondary\",\n            disabled: buttonDisabled,\n            onClick: addProduct,\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n});\nexport default OfferProduct;","map":{"version":3,"sources":["D:/projekty/ecommerce/front/components/OfferProduct/index.js"],"names":["React","useState","useEffect","styled","Button","Tooltip","useDispatch","useSelector","addProductToCart","selectProducts","Card","div","CardImage","CardContentContainer","CardContentHeader","h4","CardContentDescription","p","CardContentInfoWrapper","CardContentType","CardContentPrize","OfferProduct","memo","product","user","setVariant","setMessage","productName","productDescription","gameType","prize","productImg","buttonDisabled","setButtonDisabled","dispatch","cardProducts","products","isMounted","addProduct","includes","setTimeout"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  addProductToCart,\r\n  selectProducts,\r\n} from \"../../Reducers/productsSlice.js\";\r\n\r\nconst Card = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  box-shadow: 2px 2px 8px 0 rgb(0 0 0 / 60%);\r\n  background: #24272e;\r\n  transition: 0.2s all linear;\r\n  border: 1px solid transparent;\r\n\r\n  & > span {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n  }\r\n\r\n  & > span > .MuiButton-containedSecondary {\r\n    margin: 15px;\r\n    background-color: #5bb2fc;\r\n    width: fit-content;\r\n    align-self: center;\r\n    transition: 0.5s all linear;\r\n    margin-top: auto;\r\n\r\n    &:hover {\r\n      background-color: #ff3600bf;\r\n    }\r\n  }\r\n\r\n  & > span > .MuiButton-contained.Mui-disabled {\r\n    background-color: #0b3558;\r\n    color: rgba(255, 255, 255, 0.6);\r\n  }\r\n\r\n  @media (min-width: 960px) {\r\n    max-width: 300px;\r\n  }\r\n\r\n  &:hover {\r\n    transform: scale(1.05);\r\n    border: 1px solid #ff5a5a;\r\n  }\r\n`;\r\n\r\nconst CardImage = styled.div`\r\n  display: flex;\r\n\r\n  height: 200px;\r\n  width: auto;\r\n\r\n  img {\r\n    width: 100%;\r\n    height: auto;\r\n  }\r\n\r\n  @media (min-width: 960px) {\r\n    height: 280px;\r\n    width: auto;\r\n  }\r\n`;\r\n\r\nconst CardContentContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 7px;\r\n  color: rgba(255, 255, 255, 0.8);\r\n  justify-content: space-between;\r\n  font-family: \"Roboto\";\r\n  flex: 1;\r\n  @media (min-width: 960px) {\r\n    padding: 12px;\r\n  }\r\n`;\r\n\r\nconst CardContentHeader = styled.h4`\r\n  width: 100%;\r\n  font-size: 1.4em;\r\n  font-family: \"Black Ops One\", normal;\r\n  font-weight: 500;\r\n  margin-top: 5px;\r\n`;\r\n\r\nconst CardContentDescription = styled.p`\r\n  display: block;\r\n  width: 100%;\r\n  margin: 8px 0px;\r\n  word-break: break-word;\r\n  font-family: \"Black Ops One\", normal;\r\n  font-weight: 500;\r\n`;\r\n\r\nconst CardContentInfoWrapper = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  margin: 10px 0;\r\n  font-size: 1.3em;\r\n  font-family: \"Black Ops One\", normal;\r\n  font-weight: 500;\r\n`;\r\n\r\nconst CardContentType = styled.p`\r\n  display: flex;\r\n  width: 65%;\r\n`;\r\n\r\nconst CardContentPrize = styled.p`\r\n  display: flex;\r\n  width: 35%;\r\n  justify-content: flex-end;\r\n`;\r\n\r\nconst OfferProduct = React.memo(({ product, user, setVariant, setMessage }) => {\r\n  const {\r\n    productName,\r\n    productDescription,\r\n    gameType,\r\n    prize,\r\n    productImg,\r\n  } = product;\r\n\r\n  const [buttonDisabled, setButtonDisabled] = useState(true);\r\n  const dispatch = useDispatch();\r\n  const cardProducts = useSelector(selectProducts).products;\r\n\r\n  useEffect(() => {\r\n    let isMounted = true;\r\n    if (user.user !== null) {\r\n      setButtonDisabled(false);\r\n    } else {\r\n      setButtonDisabled(true);\r\n    }\r\n\r\n    return () => {\r\n      isMounted = false;\r\n    };\r\n  }, [user]);\r\n\r\n  const addProduct = () => {\r\n    if (!cardProducts.includes(product)) {\r\n      setMessage(\"Product added to cart\");\r\n      setVariant(\"success\");\r\n      dispatch(addProductToCart(product));\r\n      return;\r\n    }\r\n    setMessage(\"Product already in card\");\r\n    setVariant(\"error\");\r\n\r\n    setTimeout(() => {\r\n      setMessage(null);\r\n      setVariant(null);\r\n    }, 1000);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card>  <CardImage>\r\n          <img src={`http://localhost:8080/${productImg}`} alt={productName} />\r\n        </CardImage>\r\n        <CardContentContainer>\r\n          <CardContentHeader>{productName}</CardContentHeader>\r\n          <CardContentDescription>{productDescription}</CardContentDescription>\r\n          <CardContentInfoWrapper>\r\n            <CardContentType>{gameType}</CardContentType>\r\n            <CardContentPrize>{prize} $</CardContentPrize>\r\n          </CardContentInfoWrapper>\r\n        </CardContentContainer>\r\n        <Tooltip title={buttonDisabled ? \"Sing in to buy product\" : \"\"}>\r\n          <span>\r\n            <Button\r\n              variant='contained'\r\n              color='secondary'\r\n              disabled={buttonDisabled}\r\n              onClick={addProduct}\r\n            >\r\n              Add\r\n            </Button>\r\n          </span>\r\n        </Tooltip>\r\n      </Card>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default OfferProduct;\r\n"]},"metadata":{},"sourceType":"module"}