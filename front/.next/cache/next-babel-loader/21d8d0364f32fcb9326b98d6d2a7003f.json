{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\projekty\\\\ecommerce\\\\front\\\\components\\\\RegisterForm\\\\index.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  width: 100%;\\n  text-align: center;\\n  font-weight: 700;\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  color: red;\\n  font-size: 12px;\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  width: 100%;\\n  height: 100%;\\n  flex-direction: column;\\n  justify-content: space-between;\\n  align-items: center;\\n\\n  /* & > placeholder {\\n    color: gray;\\n  } */\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  align-items: center;\\n  flex-direction: column;\\n  justify-content: space-between;\\n  min-width: 35vw;\\n  max-width: 500px;\\n  min-height: 40vh;\\n  background-color: #1d1d1c;\\n  padding: 10px;\\n  color: white;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { useForm } from \"react-hook-form\";\nimport Input from \"@material-ui/core/Input\";\nimport { FormLabel } from \"@material-ui/core\";\nvar Wrapper = styled.div(_templateObject());\n_c = Wrapper;\nvar Form = styled.form(_templateObject2());\n_c2 = Form;\nvar ErrorSpan = styled.span(_templateObject3());\n_c3 = ErrorSpan;\nvar Header = styled.h3(_templateObject4());\n_c4 = Header;\nvar defaultValues = {\n  firstName: \"\",\n  lastName: \"\",\n  email: \"\",\n  password: \"\"\n};\n\nvar RegisterForm = function RegisterForm() {\n  _s();\n\n  var _useForm = useForm({\n    defaultValues: defaultValues\n  }),\n      register = _useForm.register,\n      handleSubmit = _useForm.handleSubmit,\n      errors = _useForm.errors,\n      setError = _useForm.setError,\n      reset = _useForm.reset;\n\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        children: \"Create an account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(FormLabel, {\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          name: \"firstName\",\n          placeholder: \"First Name\",\n          inputRef: register({\n            required: true\n          }),\n          onChange: function onChange() {\n            setError(\"firstName\", {\n              type: \"manual\",\n              message: \"You have to provide a first name\"\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, _this), errors.firstName && errors.firstName.type === \"required\" && /*#__PURE__*/_jsxDEV(ErrorSpan, {\n          children: \"Please provide a first name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(FormLabel, {\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          name: \"lastName\",\n          placeholder: \"Last Name\",\n          inputRef: register({\n            required: true\n          }),\n          onChange: function onChange() {\n            setError(\"lastName\", {\n              type: \"manual\",\n              message: \"You have to provide a last name\"\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, _this), errors.lastName && errors.lastName.type === \"required\" && /*#__PURE__*/_jsxDEV(ErrorSpan, {\n          children: \"Please provide a last name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(FormLabel, {\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          name: \"email\",\n          placeholder: \"Enter email\",\n          inputRef: register({\n            required: true,\n            pattern: {\n              value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n              message: \"invalid email address\"\n            }\n          }),\n          onChange: function onChange() {\n            setError(\"email\", {\n              type: \"manual\",\n              message: \"You have to a email\"\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, _this), errors.email && errors.email.type === \"required\" && /*#__PURE__*/_jsxDEV(ErrorSpan, {\n          children: \"Please provide a email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(FormLabel, {\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          type: \"password\",\n          name: \"password\",\n          placeholder: \"Enter Password\",\n          inputRef: register({\n            required: true\n          }),\n          onChange: function onChange() {\n            setError(\"password\", {\n              type: \"manual\",\n              message: \"You have to provide a password\"\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, _this), errors.password && errors.password.type === \"required\" && /*#__PURE__*/_jsxDEV(ErrorSpan, {\n          children: \"Please provide a password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(RegisterForm, \"VfD5fQQClLmpmB0QDJLztbQYVL4=\", false, function () {\n  return [useForm];\n});\n\n_c5 = RegisterForm;\nexport default RegisterForm;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"Form\");\n$RefreshReg$(_c3, \"ErrorSpan\");\n$RefreshReg$(_c4, \"Header\");\n$RefreshReg$(_c5, \"RegisterForm\");","map":{"version":3,"sources":["D:/projekty/ecommerce/front/components/RegisterForm/index.js"],"names":["React","styled","useForm","Input","FormLabel","Wrapper","div","Form","form","ErrorSpan","span","Header","h3","defaultValues","firstName","lastName","email","password","RegisterForm","register","handleSubmit","errors","setError","reset","required","type","message","pattern","value"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport { FormLabel } from \"@material-ui/core\";\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  min-width: 35vw;\r\n  max-width: 500px;\r\n  min-height: 40vh;\r\n  background-color: #1d1d1c;\r\n  padding: 10px;\r\n  color: white;\r\n`;\r\n\r\nconst Form = styled.form`\r\n  display: flex;\r\n  width: 100%;\r\n  height: 100%;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n\r\n  /* & > placeholder {\r\n    color: gray;\r\n  } */\r\n`;\r\n\r\nconst ErrorSpan = styled.span`\r\n  color: red;\r\n  font-size: 12px;\r\n`;\r\n\r\nconst Header = styled.h3`\r\n  display: flex;\r\n  width: 100%;\r\n  text-align: center;\r\n  font-weight: 700;\r\n`;\r\n\r\nconst defaultValues = {\r\n  firstName: \"\",\r\n  lastName: \"\",\r\n  email: \"\",\r\n  password: \"\",\r\n};\r\n\r\nconst RegisterForm = () => {\r\n  const { register, handleSubmit, errors, setError, reset } = useForm({\r\n    defaultValues,\r\n  });\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Form>\r\n        <Header>Create an account</Header>\r\n        <FormLabel>\r\n          <Input\r\n            type='text'\r\n            name='firstName'\r\n            placeholder='First Name'\r\n            inputRef={register({ required: true })}\r\n            onChange={() => {\r\n              setError(\"firstName\", {\r\n                type: \"manual\",\r\n                message: \"You have to provide a first name\",\r\n              });\r\n            }}\r\n          />\r\n          {errors.firstName && errors.firstName.type === \"required\" && (\r\n            <ErrorSpan>Please provide a first name</ErrorSpan>\r\n          )}\r\n        </FormLabel>\r\n        <FormLabel>\r\n          <Input\r\n            type='text'\r\n            name='lastName'\r\n            placeholder='Last Name'\r\n            inputRef={register({ required: true })}\r\n            onChange={() => {\r\n              setError(\"lastName\", {\r\n                type: \"manual\",\r\n                message: \"You have to provide a last name\",\r\n              });\r\n            }}\r\n          />\r\n          {errors.lastName && errors.lastName.type === \"required\" && (\r\n            <ErrorSpan>Please provide a last name</ErrorSpan>\r\n          )}\r\n        </FormLabel>\r\n        <FormLabel>\r\n          <Input\r\n            type='text'\r\n            name='email'\r\n            placeholder='Enter email'\r\n            inputRef={register({\r\n              required: true,\r\n              pattern: {\r\n                value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\r\n                message: \"invalid email address\",\r\n              },\r\n            })}\r\n            onChange={() => {\r\n              setError(\"email\", {\r\n                type: \"manual\",\r\n                message: \"You have to a email\",\r\n              });\r\n            }}\r\n          />\r\n          {errors.email && errors.email.type === \"required\" && (\r\n            <ErrorSpan>Please provide a email</ErrorSpan>\r\n          )}\r\n        </FormLabel>\r\n        <FormLabel>\r\n          <Input\r\n            type='password'\r\n            name='password'\r\n            placeholder='Enter Password'\r\n            inputRef={register({ required: true })}\r\n            onChange={() => {\r\n              setError(\"password\", {\r\n                type: \"manual\",\r\n                message: \"You have to provide a password\",\r\n              });\r\n            }}\r\n          />\r\n          {errors.password && errors.password.type === \"required\" && (\r\n            <ErrorSpan>Please provide a password</ErrorSpan>\r\n          )}\r\n        </FormLabel>\r\n      </Form>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default RegisterForm;\r\n"]},"metadata":{},"sourceType":"module"}