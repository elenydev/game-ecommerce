{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\projekty\\\\ecommerce\\\\front\\\\components\\\\RegisterForm\\\\index.js\";\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useForm } from \"react-hook-form\";\nimport Input from \"@material-ui/core/Input\";\nimport { FormLabel, Button, Checkbox } from \"@material-ui/core\";\nimport Link from \"next/link\";\nimport Alert from \"../Alert/index\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport PhotoCamera from \"@material-ui/icons/PhotoCamera\";\nconst Wrapper = styled.div.withConfig({\n  displayName: \"RegisterForm__Wrapper\",\n  componentId: \"sc-1ngtmd-0\"\n})([\"display:flex;align-items:center;flex-direction:column;justify-content:space-between;min-width:35vw;max-width:500px;padding:10px;color:white;box-shadow:2px 2px 8px 0 rgb(0 0 0 / 60%);background-color:rgba(0,0,0,0.3);\"]);\nconst Form = styled.form.withConfig({\n  displayName: \"RegisterForm__Form\",\n  componentId: \"sc-1ngtmd-1\"\n})([\"display:flex;width:100%;height:100%;flex-direction:column;justify-content:space-between;align-items:center;color:white;& > .MuiButton-containedSecondary{margin:15px;background-color:#b73d1cbf;&:hover{background-color:#ff3600bf;}}& > .MuiFormLabel-root{color:white;}& > .hidden{display:none;}& > label > .MuiIconButton-colorPrimary{color:#ff3600bf !important;}\"]);\nconst LoginDiv = styled.div.withConfig({\n  displayName: \"RegisterForm__LoginDiv\",\n  componentId: \"sc-1ngtmd-2\"\n})([\"text-align:center;margin:5px 0;transition:0.3s ease-in-out;position:relative;&:before{bottom:0;width:100%;background-color:white;content:\\\"\\\";position:absolute;transition:border-bottom-color 200ms cubic-bezier(0.4,0,0.2,1) 0ms;border-bottom:1px solid rgba(0,0,0,0.5);pointer-events:none;}&:hover::before{border-bottom:1px solid white;}\"]);\nconst ErrorSpan = styled.span.withConfig({\n  displayName: \"RegisterForm__ErrorSpan\",\n  componentId: \"sc-1ngtmd-3\"\n})([\"color:#ff5a5a;font-size:12px;& > a{cursor:pointer;}\"]);\nconst Header = styled.h2.withConfig({\n  displayName: \"RegisterForm__Header\",\n  componentId: \"sc-1ngtmd-4\"\n})([\"display:flex;font-weight:700;\"]);\nconst InputElement = styled(Input).withConfig({\n  displayName: \"RegisterForm__InputElement\",\n  componentId: \"sc-1ngtmd-5\"\n})([\"margin:8px 0;color:white;& > .MuiInputBase-input{color:white;}\"]);\nconst CheckBox = styled(FormLabel).withConfig({\n  displayName: \"RegisterForm__CheckBox\",\n  componentId: \"sc-1ngtmd-6\"\n})([\"display:flex;align-items:center;justify-content:center;flex-direction:column;margin:15px 0;& > .MuiCheckbox-root{color:#b73d1cbf;}& > .MuiCheckbox-colorSecondary.Mui-checked{color:#b73d1cbf;}\"]);\nconst defaultValues = {\n  firstName: null,\n  lastName: null,\n  email: null,\n  password: null,\n  avatar: null,\n  policy: null\n};\n\nconst RegisterForm = () => {\n  const {\n    register,\n    handleSubmit,\n    errors,\n    setError,\n    reset\n  } = useForm({\n    defaultValues\n  });\n  const {\n    0: responseType,\n    1: setResponseType\n  } = useState(null);\n\n  const clearAlert = () => setTimeout(() => setResponseType(null), 2000);\n\n  const registerUser = async (data, event) => {\n    event.preventDefault();\n    const {\n      firstName,\n      lastName,\n      email,\n      password,\n      avatar,\n      policy\n    } = data;\n    const user = new FormData();\n    user.append(\"firstName\", firstName);\n    user.append(\"lastName\", lastName);\n    user.append(\"email\", email);\n    user.append(\"password\", password);\n    user.append(\"avatar\", avatar[0]);\n    user.append(\"policy\", policy);\n\n    try {\n      const send = await fetch(\"http://localhost:8080/signUp\", {\n        method: \"POST\",\n        body: user\n      });\n      const response = await send.json();\n\n      if (response) {\n        setResponseType(response);\n\n        if (response.user) {\n          reset();\n        }\n\n        clearAlert();\n      }\n    } catch (err) {\n      setResponseType({\n        message: 'Some error occured, try again'\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      children: \"Create an account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit(registerUser),\n      encType: \"\",\n      children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n        children: /*#__PURE__*/_jsxDEV(InputElement, {\n          type: \"text\",\n          name: \"firstName\",\n          placeholder: \"First Name\",\n          inputRef: register({\n            required: true\n          }),\n          onChange: () => {\n            setError(\"firstName\", {\n              type: \"manual\",\n              message: \"You have to provide a first name\"\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), errors.firstName && errors.firstName.type === \"required\" && /*#__PURE__*/_jsxDEV(ErrorSpan, {\n        children: \"Please provide a first name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n        children: /*#__PURE__*/_jsxDEV(InputElement, {\n          type: \"text\",\n          name: \"lastName\",\n          placeholder: \"Last Name\",\n          inputRef: register({\n            required: true\n          }),\n          onChange: () => {\n            setError(\"lastName\", {\n              type: \"manual\",\n              message: \"You have to provide a last name\"\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this), errors.lastName && errors.lastName.type === \"required\" && /*#__PURE__*/_jsxDEV(ErrorSpan, {\n        children: \"Please provide a last name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n        children: /*#__PURE__*/_jsxDEV(InputElement, {\n          type: \"text\",\n          name: \"email\",\n          placeholder: \"Enter email\",\n          inputRef: register({\n            required: true,\n            pattern: {\n              value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n              message: \"invalid email address\"\n            }\n          }),\n          onChange: () => {\n            setError(\"email\", {\n              type: \"manual\",\n              message: \"You have to a email\"\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this), errors.email && errors.email.type === \"required\" && /*#__PURE__*/_jsxDEV(ErrorSpan, {\n        children: \"Please provide a email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 11\n      }, this), errors.email && errors.email.type === \"pattern\" && /*#__PURE__*/_jsxDEV(ErrorSpan, {\n        children: \"Please provide a correct email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n        children: /*#__PURE__*/_jsxDEV(InputElement, {\n          type: \"password\",\n          name: \"password\",\n          placeholder: \"Enter Password\",\n          inputRef: register({\n            required: true\n          }),\n          onChange: () => {\n            setError(\"password\", {\n              type: \"manual\",\n              message: \"You have to provide a password\"\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this), errors.password && errors.password.type === \"required\" && /*#__PURE__*/_jsxDEV(ErrorSpan, {\n        children: \"Please provide a password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: register({\n          required: true\n        }),\n        name: \"avatar\",\n        type: \"file\",\n        accept: \".png, .jpg, .jpeg\",\n        id: \"avatar\",\n        className: \"hidden\",\n        onChange: e => {\n          setError(\"avatar\", {\n            type: \"manual\",\n            message: \"You have to provide an avatar\"\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"avatar\",\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          color: \"primary\",\n          \"aria-label\": \"upload picture\",\n          component: \"span\",\n          children: /*#__PURE__*/_jsxDEV(PhotoCamera, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }, this), errors.avatar && errors.avatar.type === \"required\" && /*#__PURE__*/_jsxDEV(ErrorSpan, {\n        children: \"Please provide an avatar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(CheckBox, {\n        children: [\" \", \"You have to accept our\", \" \", /*#__PURE__*/_jsxDEV(Link, {\n          href: \"/privacy\",\n          children: /*#__PURE__*/_jsxDEV(ErrorSpan, {\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              children: \"Privacy Policy\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Checkbox, {\n          name: \"policy\",\n          inputRef: register({\n            required: true\n          }),\n          onChange: () => {\n            setError(\"policy\", {\n              type: \"manual\",\n              message: \"You have accept our privacy policy \"\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 11\n        }, this), errors.policy && errors.policy.type === \"required\" && /*#__PURE__*/_jsxDEV(ErrorSpan, {\n          children: \"Please accept our privacy policy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        color: \"secondary\",\n        children: \"Create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LoginDiv, {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        href: \"/auth/login\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          children: \"Or switch to sign in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 7\n    }, this), responseType && responseType.user && /*#__PURE__*/_jsxDEV(Alert, {\n      message: \"User succesfully created\",\n      shouldOpen: true,\n      variant: \"success\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 9\n    }, this) || responseType && responseType.message && /*#__PURE__*/_jsxDEV(Alert, {\n      message: responseType.message,\n      shouldOpen: true,\n      variant: \"error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 164,\n    columnNumber: 5\n  }, this);\n};\n\nexport default RegisterForm;","map":{"version":3,"sources":["D:/projekty/ecommerce/front/components/RegisterForm/index.js"],"names":["React","useState","styled","useForm","Input","FormLabel","Button","Checkbox","Link","Alert","IconButton","PhotoCamera","Wrapper","div","Form","form","LoginDiv","ErrorSpan","span","Header","h2","InputElement","CheckBox","defaultValues","firstName","lastName","email","password","avatar","policy","RegisterForm","register","handleSubmit","errors","setError","reset","responseType","setResponseType","clearAlert","setTimeout","registerUser","data","event","preventDefault","user","FormData","append","send","fetch","method","body","response","json","err","message","required","type","pattern","value","e"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport { FormLabel, Button, Checkbox } from \"@material-ui/core\";\r\nimport Link from \"next/link\";\r\nimport Alert from \"../Alert/index\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport PhotoCamera from \"@material-ui/icons/PhotoCamera\";\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  min-width: 35vw;\r\n  max-width: 500px;\r\n  padding: 10px;\r\n  color: white;\r\n  box-shadow: 2px 2px 8px 0 rgb(0 0 0 / 60%);\r\n  background-color: rgba(0, 0, 0, 0.3);\r\n`;\r\n\r\nconst Form = styled.form`\r\n  display: flex;\r\n  width: 100%;\r\n  height: 100%;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  color: white;\r\n\r\n  & > .MuiButton-containedSecondary {\r\n    margin: 15px;\r\n    background-color: #b73d1cbf;\r\n\r\n    &:hover {\r\n      background-color: #ff3600bf;\r\n    }\r\n  }\r\n\r\n  & > .MuiFormLabel-root {\r\n    color: white;\r\n  }\r\n\r\n  & > .hidden {\r\n    display: none;\r\n  }\r\n\r\n  & > label > .MuiIconButton-colorPrimary {\r\n    color: #ff3600bf !important;\r\n  }\r\n`;\r\n\r\nconst LoginDiv = styled.div`\r\n  text-align: center;\r\n  margin: 5px 0;\r\n  transition: 0.3s ease-in-out;\r\n  position: relative;\r\n\r\n  &:before {\r\n    bottom: 0;\r\n    width: 100%;\r\n    background-color: white;\r\n    content: \"\";\r\n    position: absolute;\r\n    transition: border-bottom-color 200ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;\r\n    border-bottom: 1px solid rgba(0, 0, 0, 0.5);\r\n    pointer-events: none;\r\n  }\r\n\r\n  &:hover::before {\r\n    border-bottom: 1px solid white;\r\n  }\r\n`;\r\n\r\nconst ErrorSpan = styled.span`\r\n  color: #ff5a5a;\r\n  font-size: 12px;\r\n\r\n  & > a {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst Header = styled.h2`\r\n  display: flex;\r\n  font-weight: 700;\r\n`;\r\n\r\nconst InputElement = styled(Input)`\r\n  margin: 8px 0;\r\n  color: white;\r\n\r\n  & > .MuiInputBase-input {\r\n    color: white;\r\n  }\r\n`;\r\n\r\nconst CheckBox = styled(FormLabel)`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  margin: 15px 0;\r\n\r\n  & > .MuiCheckbox-root {\r\n    color: #b73d1cbf;\r\n  }\r\n\r\n  & > .MuiCheckbox-colorSecondary.Mui-checked {\r\n    color: #b73d1cbf;\r\n  }\r\n`;\r\n\r\nconst defaultValues = {\r\n  firstName: null,\r\n  lastName: null,\r\n  email: null,\r\n  password: null,\r\n  avatar: null,\r\n  policy: null,\r\n};\r\n\r\nconst RegisterForm = () => {\r\n  const { register, handleSubmit, errors, setError, reset } = useForm({\r\n    defaultValues,\r\n  });\r\n\r\n  const [responseType, setResponseType] = useState(null);\r\n  const clearAlert = () => setTimeout(() => setResponseType(null),2000);\r\n  \r\n  const registerUser = async (data, event) => {\r\n    event.preventDefault();\r\n    const { firstName, lastName, email, password, avatar, policy } = data;\r\n\r\n    const user = new FormData();\r\n    user.append(\"firstName\", firstName);\r\n    user.append(\"lastName\", lastName);\r\n    user.append(\"email\", email);\r\n    user.append(\"password\", password);\r\n    user.append(\"avatar\", avatar[0]);\r\n    user.append(\"policy\", policy);\r\n\r\n    try {\r\n      const send = await fetch(\"http://localhost:8080/signUp\", {\r\n        method: \"POST\",\r\n        body: user,\r\n      });\r\n      const response = await send.json();\r\n      if (response)  {\r\n        setResponseType(response);\r\n        if(response.user){\r\n          reset()\r\n        }\r\n        clearAlert()\r\n      }\r\n    } catch (err) {\r\n      setResponseType({message:'Some error occured, try again'})\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Header>Create an account</Header>\r\n\r\n      <Form onSubmit={handleSubmit(registerUser)} encType=''>\r\n        <FormLabel>\r\n          <InputElement\r\n            type='text'\r\n            name='firstName'\r\n            placeholder='First Name'\r\n            inputRef={register({ required: true })}\r\n            onChange={() => {\r\n              setError(\"firstName\", {\r\n                type: \"manual\",\r\n                message: \"You have to provide a first name\",\r\n              });\r\n            }}\r\n          />\r\n        </FormLabel>\r\n        {errors.firstName && errors.firstName.type === \"required\" && (\r\n          <ErrorSpan>Please provide a first name</ErrorSpan>\r\n        )}\r\n        \r\n        <FormLabel>\r\n          <InputElement\r\n            type='text'\r\n            name='lastName'\r\n            placeholder='Last Name'\r\n            inputRef={register({ required: true })}\r\n            onChange={() => {\r\n              setError(\"lastName\", {\r\n                type: \"manual\",\r\n                message: \"You have to provide a last name\",\r\n              });\r\n            }}\r\n          />\r\n        </FormLabel>\r\n        {errors.lastName && errors.lastName.type === \"required\" && (\r\n          <ErrorSpan>Please provide a last name</ErrorSpan>\r\n        )}\r\n        \r\n        <FormLabel>\r\n          <InputElement\r\n            type='text'\r\n            name='email'\r\n            placeholder='Enter email'\r\n            inputRef={register({\r\n              required: true,\r\n              pattern: {\r\n                value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\r\n                message: \"invalid email address\",\r\n              },\r\n            })}\r\n            onChange={() => {\r\n              setError(\"email\", {\r\n                type: \"manual\",\r\n                message: \"You have to a email\",\r\n              });\r\n            }}\r\n          />\r\n        </FormLabel>\r\n        {errors.email && errors.email.type === \"required\" && (\r\n          <ErrorSpan>Please provide a email</ErrorSpan>\r\n        )}\r\n        {errors.email && errors.email.type === \"pattern\" && (\r\n          <ErrorSpan>Please provide a correct email</ErrorSpan>\r\n        )}\r\n        \r\n        <FormLabel>\r\n          <InputElement\r\n            type='password'\r\n            name='password'\r\n            placeholder='Enter Password'\r\n            inputRef={register({ required: true })}\r\n            onChange={() => {\r\n              setError(\"password\", {\r\n                type: \"manual\",\r\n                message: \"You have to provide a password\",\r\n              });\r\n            }}\r\n          />\r\n        </FormLabel>\r\n        {errors.password && errors.password.type === \"required\" && (\r\n          <ErrorSpan>Please provide a password</ErrorSpan>\r\n        )}\r\n        \r\n        <input\r\n          ref={register({ required: true })}\r\n          name='avatar'\r\n          type='file'\r\n          accept='.png, .jpg, .jpeg'\r\n          id='avatar'\r\n          className='hidden'\r\n          onChange={(e) => {\r\n            setError(\"avatar\", {\r\n              type: \"manual\",\r\n              message: \"You have to provide an avatar\",\r\n            });\r\n          }}\r\n        />\r\n        <label htmlFor='avatar'>\r\n          <IconButton\r\n            color='primary'\r\n            aria-label='upload picture'\r\n            component='span'\r\n          >\r\n            <PhotoCamera />\r\n          </IconButton>\r\n        </label>\r\n        {errors.avatar && errors.avatar.type === \"required\" && (\r\n          <ErrorSpan>Please provide an avatar</ErrorSpan>\r\n        )}\r\n        \r\n        <CheckBox>\r\n          {\" \"}\r\n          You have to accept our{\" \"}\r\n          <Link href='/privacy'>\r\n            <ErrorSpan>\r\n              <a>Privacy Policy</a>\r\n            </ErrorSpan>\r\n          </Link>\r\n          <Checkbox\r\n            name='policy'\r\n            inputRef={register({ required: true })}\r\n            onChange={() => {\r\n              setError(\"policy\", {\r\n                type: \"manual\",\r\n                message: \"You have accept our privacy policy \",\r\n              });\r\n            }}\r\n          />\r\n          {errors.policy && errors.policy.type === \"required\" && (\r\n            <ErrorSpan>Please accept our privacy policy</ErrorSpan>\r\n          )}\r\n        </CheckBox>\r\n        <Button type='submit' variant='contained' color='secondary'>\r\n          Create\r\n        </Button>\r\n      </Form>\r\n      \r\n      <LoginDiv>\r\n        <Link href='/auth/login'>\r\n          <a>Or switch to sign in</a>\r\n        </Link>\r\n      </LoginDiv>\r\n\r\n      {(responseType && responseType.user && (\r\n        <Alert\r\n          message='User succesfully created'\r\n          shouldOpen={true}\r\n          variant='success'\r\n        />\r\n      )) ||\r\n        (responseType && responseType.message && (\r\n          <Alert\r\n            message={responseType.message}\r\n            shouldOpen={true}\r\n            variant='error'\r\n          />\r\n        ))}\r\n        \r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default RegisterForm;\r\n"]},"metadata":{},"sourceType":"module"}