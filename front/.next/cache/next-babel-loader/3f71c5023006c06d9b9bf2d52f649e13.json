{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\projekty\\\\ecommerce\\\\front\\\\components\\\\Sidebar\\\\index.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from \"react\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport clsx from \"clsx\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nvar useStyles = makeStyles({\n  list: {\n    width: 250\n  },\n  fullList: {\n    width: \"auto\"\n  }\n});\n\nvar Sidebar = function Sidebar() {\n  _s();\n\n  var classes = useStyles();\n\n  var _useState = useState({\n    left: false\n  }),\n      open = _useState[0],\n      setOpen = _useState[1];\n\n  var toggleDrawer = function toggleDrawer(anchor, open) {\n    return function (event) {\n      if (event.type === \"keydown\" && (event.key === \"Tab\" || event.key === \"Shift\")) {\n        return;\n      }\n\n      setOpen(_objectSpread(_objectSpread({}, open), {}, _defineProperty({}, anchor, open)));\n    };\n  };\n\n  var list = function list(anchor) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: clsx(classes.list, _defineProperty({}, classes.fullList, anchor === \"top\" || anchor === \"bottom\")),\n      role: \"presentation\",\n      onClick: toggleDrawer(anchor, false),\n      onKeyDown: toggleDrawer(anchor, false),\n      children: /*#__PURE__*/_jsxDEV(List, {\n        children: [\"All mail\", \"Trash\", \"Spam\"].map(function (text, index) {\n          return /*#__PURE__*/_jsxDEV(ListItem, {\n            button: true,\n            children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n              children: index % 2 === 0 ? /*#__PURE__*/_jsxDEV(InboxIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 34\n              }, _this) : /*#__PURE__*/_jsxDEV(MailIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 50\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 13\n            }, _this), /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 13\n            }, _this)]\n          }, text, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 11\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }, _this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      onClick: toggleDrawer(\"left\", true),\n      children: \"Menu\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Drawer, {\n      anchor: \"left\",\n      open: open[\"left\"],\n      onClose: toggleDrawer(\"left\", false),\n      children: list(\"left\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(Sidebar, \"7B/EqnrjVmpkPHmtpSmstYiX9MQ=\", false, function () {\n  return [useStyles];\n});\n\n_c = Sidebar;\nexport default Sidebar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"sources":["D:/projekty/ecommerce/front/components/Sidebar/index.js"],"names":["React","useState","Drawer","Button","makeStyles","List","clsx","ListItem","ListItemIcon","ListItemText","useStyles","list","width","fullList","Sidebar","classes","left","open","setOpen","toggleDrawer","anchor","event","type","key","map","text","index"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport List from \"@material-ui/core/List\";\r\nimport clsx from \"clsx\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\n\r\nconst useStyles = makeStyles({\r\n  list: {\r\n    width: 250,\r\n  },\r\n  fullList: {\r\n    width: \"auto\",\r\n  },\r\n});\r\n\r\nconst Sidebar = () => {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState({\r\n    left: false,\r\n  });\r\n\r\n  const toggleDrawer = (anchor, open) => (event) => {\r\n    if (\r\n      event.type === \"keydown\" &&\r\n      (event.key === \"Tab\" || event.key === \"Shift\")\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    setOpen({ ...open, [anchor]: open });\r\n  };\r\n\r\n  const list = (anchor) => (\r\n    <div\r\n      className={clsx(classes.list, {\r\n        [classes.fullList]: anchor === \"top\" || anchor === \"bottom\",\r\n      })}\r\n      role=\"presentation\"\r\n      onClick={toggleDrawer(anchor, false)}\r\n      onKeyDown={toggleDrawer(anchor, false)}\r\n    >\r\n      <List>\r\n        {[\"All mail\", \"Trash\", \"Spam\"].map((text, index) => (\r\n          <ListItem button key={text}>\r\n            <ListItemIcon>\r\n              {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\r\n            </ListItemIcon>\r\n            <ListItemText primary={text} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Button onClick={toggleDrawer(\"left\", true)}>Menu</Button>\r\n      <Drawer\r\n        anchor=\"left\"\r\n        open={open[\"left\"]}\r\n        onClose={toggleDrawer(\"left\", false)}\r\n      >\r\n        {list(\"left\")}\r\n      </Drawer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n"]},"metadata":{},"sourceType":"module"}