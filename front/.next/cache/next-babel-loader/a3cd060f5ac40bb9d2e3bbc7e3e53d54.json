{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\projekty\\\\ecommerce\\\\front\\\\components\\\\AddProductForm\\\\index.js\";\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport Input from \"@material-ui/core/Input\";\nimport { FormLabel, Button, Checkbox } from \"@material-ui/core\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport PhotoCamera from \"@material-ui/icons/PhotoCamera\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Alert from \"../../components/Alert/index.js\";\nconst Form = styled.form.withConfig({\n  displayName: \"AddProductForm__Form\",\n  componentId: \"sc-108fhvp-0\"\n})([\"display:flex;width:fit-content;height:100%;flex-direction:column;justify-content:space-between;align-items:center;color:white;& > .MuiButton-containedSecondary{margin:15px;background-color:#b73d1cbf;&:hover{background-color:#ff3600bf;}}& > .MuiFormLabel-root{color:white;}& > .hidden{display:none;}& > label > .MuiIconButton-colorPrimary{color:#ff3600bf !important;}& > .MuiInputBase-root{color:white !important;&::placeholder{color:white;}}\"]);\nconst ErrorSpan = styled.span.withConfig({\n  displayName: \"AddProductForm__ErrorSpan\",\n  componentId: \"sc-108fhvp-1\"\n})([\"color:#ff5a5a;font-size:12px;& > a{cursor:pointer;}\"]);\nconst Header = styled.h2.withConfig({\n  displayName: \"AddProductForm__Header\",\n  componentId: \"sc-108fhvp-2\"\n})([\"display:flex;font-weight:700;width:100%;padding:10px;justify-content:center;color:rgb(255 90 90 /60%);\"]);\nconst InputElement = styled(Input).withConfig({\n  displayName: \"AddProductForm__InputElement\",\n  componentId: \"sc-108fhvp-3\"\n})([\"margin:8px 0;color:white;& > .MuiInputBase-input{color:white;}\"]);\nconst SelectBox = styled.div.withConfig({\n  displayName: \"AddProductForm__SelectBox\",\n  componentId: \"sc-108fhvp-4\"\n})([\"display:flex;flex-direction:column;align-items:flex-start;width:100%;& > .MuiFormLabel-root{margin:10px 0;color:rgba(255,255,255,0.5);}\"]);\nconst defaultValues = {\n  productName: null,\n  productDescription: null,\n  gameType: \"War\",\n  prize: null,\n  amount: null,\n  productImage: null,\n  device: \"Dekstop\"\n};\n\nconst AddProductForm = () => {\n  const {\n    register,\n    handleSubmit,\n    errors,\n    setError,\n    reset,\n    control\n  } = useForm({\n    defaultValues\n  });\n  const {\n    0: responseType,\n    1: setResponseType\n  } = useState(null);\n  const {\n    0: gameType,\n    1: setGameType\n  } = useState(\"War\");\n  const {\n    0: device,\n    1: setDevice\n  } = useState(\"Desktop\");\n\n  const clearAlert = () => setTimeout(() => setResponseType(null), 999);\n\n  const handleChangeGameType = event => {\n    setGameType(event.target.value);\n  };\n\n  const handleChangeDevice = event => {\n    setDevice(e.target.value);\n  };\n\n  const registerProduct = async (data, event) => {\n    event.preventDefault();\n    const {\n      productName,\n      productDescription,\n      gameType,\n      prize,\n      amount,\n      productImg,\n      device\n    } = data;\n    const product = new FormData();\n    product.append(\"productName\", productName);\n    product.append(\"productDescription\", productDescription);\n    product.append(\"gameType\", gameType);\n    product.append(\"prize\", prize);\n    product.append(\"amount\", amount);\n    product.append(\"productImg\", productImg[0]);\n    product.append(\"device\", device);\n\n    try {\n      const send = await fetch(\"http://localhost:8080/addProduct\", {\n        method: \"POST\",\n        body: product\n      });\n      const response = await send.json();\n      console.log(response);\n\n      if (response) {\n        setResponseType(response);\n\n        if (response.product) {\n          reset();\n        }\n      }\n    } catch (err) {\n      setResponseType({\n        message: \"Some error occured, try again\"\n      });\n    }\n\n    clearAlert();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      children: \"Add product\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit(registerProduct),\n      encType: \"\",\n      children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n        children: /*#__PURE__*/_jsxDEV(InputElement, {\n          type: \"text\",\n          name: \"productName\",\n          placeholder: \"Product Name\",\n          inputRef: register({\n            required: true\n          }),\n          onChange: () => {\n            setError(\"productName\", {\n              type: \"manual\",\n              message: \"You have to provide a product name\"\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), errors.productName && errors.productName.type === \"required\" && /*#__PURE__*/_jsxDEV(ErrorSpan, {\n        children: \"Please provide a product name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n        children: /*#__PURE__*/_jsxDEV(InputElement, {\n          type: \"text\",\n          name: \"productDescription\",\n          placeholder: \"Product Description\",\n          inputRef: register({\n            required: true\n          }),\n          onChange: () => {\n            setError(\"productDescription\", {\n              type: \"manual\",\n              message: \"You have to provide a product description\"\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), errors.productDescription && errors.productDescription.type === \"required\" && /*#__PURE__*/_jsxDEV(ErrorSpan, {\n        children: \"Please provide a product description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(SelectBox, {\n        children: /*#__PURE__*/_jsxDEV(FormLabel, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Select game type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Controller, {\n            as: /*#__PURE__*/_jsxDEV(Select, {\n              value: gameType,\n              onChange: handleChangeGameType,\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"Wargame\",\n                children: \"Wargame\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"Racing\",\n                children: \"Racing\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"MMO\",\n                children: \"MMO\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"RPG\",\n                children: \"RPG\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"RP\",\n                children: \"RP\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"Simulation\",\n                children: \"Simulation\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"Strategy\",\n                children: \"Strategy\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"Sports\",\n                children: \"Sports\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"Survival\",\n                children: \"Survival\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"Battle Royale\",\n                children: \"Battle Royale\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 17\n            }, this),\n            name: \"gameType\",\n            rules: {\n              required: true\n            },\n            control: control\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this), errors.gameType && errors.gameType.type === \"required\" && /*#__PURE__*/_jsxDEV(ErrorSpan, {\n        children: \"Please provide a game type\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n        children: /*#__PURE__*/_jsxDEV(InputElement, {\n          type: \"number\",\n          name: \"prize\",\n          placeholder: \"Enter prize\",\n          inputRef: register({\n            required: true,\n            min: 1\n          }),\n          onChange: () => {\n            setError(\"prize\", {\n              type: \"manual\",\n              message: \"You have to provide a prize\"\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this), errors.prize && errors.prize.type === \"required\" && /*#__PURE__*/_jsxDEV(ErrorSpan, {\n        children: \"Please provide a prize\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n        children: /*#__PURE__*/_jsxDEV(InputElement, {\n          type: \"number\",\n          name: \"amount\",\n          placeholder: \"Enter amount of products \",\n          inputRef: register({\n            required: true,\n            min: 1\n          }),\n          onChange: () => {\n            setError(\"amount\", {\n              type: \"manual\",\n              message: \"You have to provide amount of products\"\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }, this), errors.amount && errors.amount.type === \"required\" && /*#__PURE__*/_jsxDEV(ErrorSpan, {\n        children: \"Please provide a amount of products\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: register({\n          required: true\n        }),\n        name: \"productImg\",\n        type: \"file\",\n        accept: \".png, .jpg, .jpeg\",\n        id: \"productImg\",\n        className: \"hidden\",\n        onChange: e => {\n          setError(\"productImg\", {\n            type: \"manual\",\n            message: \"You have to provide an product image\"\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"productImg\",\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          color: \"primary\",\n          \"aria-label\": \"upload picture\",\n          component: \"span\",\n          children: /*#__PURE__*/_jsxDEV(PhotoCamera, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 9\n      }, this), errors.productImg && errors.productImg.type === \"required\" && /*#__PURE__*/_jsxDEV(ErrorSpan, {\n        children: \"Please provide a product image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(SelectBox, {\n        children: /*#__PURE__*/_jsxDEV(FormLabel, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Select device\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Controller, {\n            as: /*#__PURE__*/_jsxDEV(Select, {\n              value: device,\n              onChange: handleChangeDevice,\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"Desktop\",\n                children: \"Desktop\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 295,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"Playstation\",\n                children: \"Playstation\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"Xbox\",\n                children: \"Xbox\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 297,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 17\n            }, this),\n            name: \"device\",\n            rules: {\n              required: true\n            },\n            control: control\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 9\n      }, this), errors.device && errors.device.type === \"required\" && /*#__PURE__*/_jsxDEV(ErrorSpan, {\n        children: \"Please provide a device\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        color: \"secondary\",\n        children: \"Add Product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this), responseType && responseType.product && /*#__PURE__*/_jsxDEV(Alert, {\n      message: \"Product succesfully added to offer\",\n      shouldOpen: true,\n      variant: \"success\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 9\n    }, this) || responseType && responseType.message && /*#__PURE__*/_jsxDEV(Alert, {\n      message: responseType.message,\n      shouldOpen: true,\n      variant: \"error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 5\n  }, this);\n};\n\nexport default AddProductForm;","map":{"version":3,"sources":["D:/projekty/ecommerce/front/components/AddProductForm/index.js"],"names":["React","useState","styled","useForm","Controller","Input","FormLabel","Button","Checkbox","IconButton","PhotoCamera","Select","MenuItem","Alert","Form","form","ErrorSpan","span","Header","h2","InputElement","SelectBox","div","defaultValues","productName","productDescription","gameType","prize","amount","productImage","device","AddProductForm","register","handleSubmit","errors","setError","reset","control","responseType","setResponseType","setGameType","setDevice","clearAlert","setTimeout","handleChangeGameType","event","target","value","handleChangeDevice","e","registerProduct","data","preventDefault","productImg","product","FormData","append","send","fetch","method","body","response","json","console","log","err","message","required","type","min"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport { FormLabel, Button, Checkbox } from \"@material-ui/core\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport PhotoCamera from \"@material-ui/icons/PhotoCamera\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Alert from \"../../components/Alert/index.js\";\r\n\r\nconst Form = styled.form`\r\n  display: flex;\r\n  width: fit-content;\r\n  height: 100%;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  color: white;\r\n\r\n  & > .MuiButton-containedSecondary {\r\n    margin: 15px;\r\n    background-color: #b73d1cbf;\r\n\r\n    &:hover {\r\n      background-color: #ff3600bf;\r\n    }\r\n  }\r\n\r\n  & > .MuiFormLabel-root {\r\n    color: white;\r\n  }\r\n\r\n  & > .hidden {\r\n    display: none;\r\n  }\r\n\r\n  & > label > .MuiIconButton-colorPrimary {\r\n    color: #ff3600bf !important;\r\n  }\r\n\r\n  & > .MuiInputBase-root {\r\n    color: white !important;\r\n\r\n    &::placeholder {\r\n      color: white;\r\n    }\r\n  }\r\n`;\r\n\r\nconst ErrorSpan = styled.span`\r\n  color: #ff5a5a;\r\n  font-size: 12px;\r\n\r\n  & > a {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst Header = styled.h2`\r\n  display: flex;\r\n  font-weight: 700;\r\n  width: 100%;\r\n  padding: 10px;\r\n  justify-content: center;\r\n  color: rgb(255 90 90 /60%);\r\n`;\r\n\r\nconst InputElement = styled(Input)`\r\n  margin: 8px 0;\r\n  color: white;\r\n\r\n  & > .MuiInputBase-input {\r\n    color: white;\r\n  }\r\n`;\r\n\r\nconst SelectBox = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  width: 100%;\r\n\r\n  & > .MuiFormLabel-root {\r\n    margin: 10px 0;\r\n    color: rgba(255, 255, 255, 0.5);\r\n  }\r\n`;\r\n\r\nconst defaultValues = {\r\n  productName: null,\r\n  productDescription: null,\r\n  gameType: \"War\",\r\n  prize: null,\r\n  amount: null,\r\n  productImage: null,\r\n  device: \"Dekstop\",\r\n};\r\n\r\nconst AddProductForm = () => {\r\n  const { register, handleSubmit, errors, setError, reset, control } = useForm({\r\n    defaultValues,\r\n  });\r\n\r\n  const [responseType, setResponseType] = useState(null);\r\n  const [gameType, setGameType] = useState(\"War\");\r\n  const [device, setDevice] = useState(\"Desktop\");\r\n  const clearAlert = () => setTimeout(() => setResponseType(null), 999);\r\n\r\n  const handleChangeGameType = (event) => {\r\n    setGameType(event.target.value);\r\n  };\r\n\r\n  const handleChangeDevice = (event) => {\r\n    setDevice(e.target.value);\r\n  };\r\n\r\n  const registerProduct = async (data, event) => {\r\n    event.preventDefault();\r\n    const {\r\n      productName,\r\n      productDescription,\r\n      gameType,\r\n      prize,\r\n      amount,\r\n      productImg,\r\n      device,\r\n    } = data;\r\n\r\n    const product = new FormData();\r\n    product.append(\"productName\", productName);\r\n    product.append(\"productDescription\", productDescription);\r\n    product.append(\"gameType\", gameType);\r\n    product.append(\"prize\", prize);\r\n    product.append(\"amount\", amount);\r\n    product.append(\"productImg\", productImg[0]);\r\n    product.append(\"device\", device);\r\n\r\n    try {\r\n      const send = await fetch(\"http://localhost:8080/addProduct\", {\r\n        method: \"POST\",\r\n        body: product,\r\n      });\r\n      const response = await send.json();\r\n      console.log(response);\r\n      if (response) {\r\n        setResponseType(response);\r\n        if (response.product) {\r\n          reset();\r\n        }\r\n      }\r\n    } catch (err) {\r\n      setResponseType({ message: \"Some error occured, try again\" });\r\n    }\r\n    clearAlert();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Header>Add product</Header>\r\n      <Form onSubmit={handleSubmit(registerProduct)} encType=''>\r\n        <FormLabel>\r\n          <InputElement\r\n            type='text'\r\n            name='productName'\r\n            placeholder='Product Name'\r\n            inputRef={register({ required: true })}\r\n            onChange={() => {\r\n              setError(\"productName\", {\r\n                type: \"manual\",\r\n                message: \"You have to provide a product name\",\r\n              });\r\n            }}\r\n          />\r\n        </FormLabel>\r\n        {errors.productName && errors.productName.type === \"required\" && (\r\n          <ErrorSpan>Please provide a product name</ErrorSpan>\r\n        )}\r\n\r\n        <FormLabel>\r\n          <InputElement\r\n            type='text'\r\n            name='productDescription'\r\n            placeholder='Product Description'\r\n            inputRef={register({ required: true })}\r\n            onChange={() => {\r\n              setError(\"productDescription\", {\r\n                type: \"manual\",\r\n                message: \"You have to provide a product description\",\r\n              });\r\n            }}\r\n          />\r\n        </FormLabel>\r\n        {errors.productDescription &&\r\n          errors.productDescription.type === \"required\" && (\r\n            <ErrorSpan>Please provide a product description</ErrorSpan>\r\n          )}\r\n\r\n        <SelectBox>\r\n          <FormLabel>\r\n            <p>Select game type</p>\r\n            <Controller\r\n              as={\r\n                <Select value={gameType} onChange={handleChangeGameType}>\r\n                  <MenuItem value='Wargame'>Wargame</MenuItem>\r\n                  <MenuItem value='Racing'>Racing</MenuItem>\r\n                  <MenuItem value='MMO'>MMO</MenuItem>\r\n                  <MenuItem value='RPG'>RPG</MenuItem>\r\n                  <MenuItem value='RP'>RP</MenuItem>\r\n                  <MenuItem value='Simulation'>Simulation</MenuItem>\r\n                  <MenuItem value='Strategy'>Strategy</MenuItem>\r\n                  <MenuItem value='Sports'>Sports</MenuItem>\r\n                  <MenuItem value='Survival'>Survival</MenuItem>\r\n                  <MenuItem value='Battle Royale'>Battle Royale</MenuItem>\r\n                </Select>\r\n              }\r\n              name='gameType'\r\n              rules={{ required: true }}\r\n              control={control}\r\n            />\r\n          </FormLabel>\r\n        </SelectBox>\r\n        {errors.gameType && errors.gameType.type === \"required\" && (\r\n          <ErrorSpan>Please provide a game type</ErrorSpan>\r\n        )}\r\n\r\n        <FormLabel>\r\n          <InputElement\r\n            type='number'\r\n            name='prize'\r\n            placeholder='Enter prize'\r\n            inputRef={register({ required: true, min: 1 })}\r\n            onChange={() => {\r\n              setError(\"prize\", {\r\n                type: \"manual\",\r\n                message: \"You have to provide a prize\",\r\n              });\r\n            }}\r\n          />\r\n        </FormLabel>\r\n        {errors.prize && errors.prize.type === \"required\" && (\r\n          <ErrorSpan>Please provide a prize</ErrorSpan>\r\n        )}\r\n\r\n        <FormLabel>\r\n          <InputElement\r\n            type='number'\r\n            name='amount'\r\n            placeholder='Enter amount of products '\r\n            inputRef={register({ required: true, min: 1 })}\r\n            onChange={() => {\r\n              setError(\"amount\", {\r\n                type: \"manual\",\r\n                message: \"You have to provide amount of products\",\r\n              });\r\n            }}\r\n          />\r\n        </FormLabel>\r\n        {errors.amount && errors.amount.type === \"required\" && (\r\n          <ErrorSpan>Please provide a amount of products</ErrorSpan>\r\n        )}\r\n\r\n        <input\r\n          ref={register({ required: true })}\r\n          name='productImg'\r\n          type='file'\r\n          accept='.png, .jpg, .jpeg'\r\n          id='productImg'\r\n          className='hidden'\r\n          onChange={(e) => {\r\n            setError(\"productImg\", {\r\n              type: \"manual\",\r\n              message: \"You have to provide an product image\",\r\n            });\r\n          }}\r\n        />\r\n        <label htmlFor='productImg'>\r\n          <IconButton\r\n            color='primary'\r\n            aria-label='upload picture'\r\n            component='span'\r\n          >\r\n            <PhotoCamera />\r\n          </IconButton>\r\n        </label>\r\n        {errors.productImg && errors.productImg.type === \"required\" && (\r\n          <ErrorSpan>Please provide a product image</ErrorSpan>\r\n        )}\r\n        <SelectBox>\r\n          <FormLabel>\r\n            <p>Select device</p>\r\n            <Controller\r\n              as={\r\n                <Select value={device} onChange={handleChangeDevice}>\r\n                  <MenuItem value='Desktop'>Desktop</MenuItem>\r\n                  <MenuItem value='Playstation'>Playstation</MenuItem>\r\n                  <MenuItem value='Xbox'>Xbox</MenuItem>\r\n                </Select>\r\n              }\r\n              name='device'\r\n              rules={{ required: true }}\r\n              control={control}\r\n            />\r\n          </FormLabel>\r\n        </SelectBox>\r\n        {errors.device && errors.device.type === \"required\" && (\r\n          <ErrorSpan>Please provide a device</ErrorSpan>\r\n        )}\r\n\r\n        <Button type='submit' variant='contained' color='secondary'>\r\n          Add Product\r\n        </Button>\r\n      </Form>\r\n      {(responseType && responseType.product && (\r\n        <Alert\r\n          message='Product succesfully added to offer'\r\n          shouldOpen={true}\r\n          variant='success'\r\n        />\r\n      )) ||\r\n        (responseType && responseType.message && (\r\n          <Alert\r\n            message={responseType.message}\r\n            shouldOpen={true}\r\n            variant='error'\r\n          />\r\n        ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddProductForm;\r\n"]},"metadata":{},"sourceType":"module"}