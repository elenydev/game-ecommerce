{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\projekty\\\\ecommerce\\\\front\\\\components\\\\AddProductForm\\\\index.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport Input from \"@material-ui/core/Input\";\nimport { FormLabel, Button, Checkbox } from \"@material-ui/core\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport PhotoCamera from \"@material-ui/icons/PhotoCamera\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Alert from \"../../components/Alert/index.js\";\nvar Form = styled.form.withConfig({\n  displayName: \"AddProductForm__Form\",\n  componentId: \"sc-108fhvp-0\"\n})([\"display:flex;width:100%;height:100%;flex-direction:column;justify-content:space-between;align-items:center;color:white;& > .MuiButton-containedSecondary{margin:15px;background-color:#b73d1cbf;&:hover{background-color:#ff3600bf;}}& > .MuiFormLabel-root{color:white;}& > .hidden{display:none;}& > label > .MuiIconButton-colorPrimary{color:#ff3600bf !important;}& > .MuiInputBase-root{color:white !important;&::placeholder{color:white;}}\"]);\n_c = Form;\nvar ErrorSpan = styled.span.withConfig({\n  displayName: \"AddProductForm__ErrorSpan\",\n  componentId: \"sc-108fhvp-1\"\n})([\"color:#ff5a5a;font-size:12px;& > a{cursor:pointer;}\"]);\n_c2 = ErrorSpan;\nvar Header = styled.h2.withConfig({\n  displayName: \"AddProductForm__Header\",\n  componentId: \"sc-108fhvp-2\"\n})([\"display:flex;font-weight:700;width:100%;padding:10px;justify-content:center;color:rgb(255 90 90 /60%);\"]);\n_c3 = Header;\nvar InputElement = styled(Input).withConfig({\n  displayName: \"AddProductForm__InputElement\",\n  componentId: \"sc-108fhvp-3\"\n})([\"margin:8px 0;color:white;& > .MuiInputBase-input{color:white;}\"]);\n_c4 = InputElement;\nvar SelectBox = styled.div.withConfig({\n  displayName: \"AddProductForm__SelectBox\",\n  componentId: \"sc-108fhvp-4\"\n})([\".MuiInputBase-root{color:rgba(255,255,255,0.5);}\"]);\n_c5 = SelectBox;\nvar defaultValues = {\n  productName: null,\n  productDescription: null,\n  gameType: \"War\",\n  prize: null,\n  amount: null,\n  productImage: null\n};\n\nvar AddProductForm = function AddProductForm() {\n  _s();\n\n  var _useForm = useForm({\n    defaultValues: defaultValues\n  }),\n      register = _useForm.register,\n      handleSubmit = _useForm.handleSubmit,\n      errors = _useForm.errors,\n      setError = _useForm.setError,\n      reset = _useForm.reset,\n      control = _useForm.control;\n\n  var _useState = useState(null),\n      responseType = _useState[0],\n      setResponseType = _useState[1];\n\n  var _useState2 = useState(\"War\"),\n      gameType = _useState2[0],\n      setGameType = _useState2[1];\n\n  var clearAlert = function clearAlert() {\n    return setTimeout(function () {\n      return setResponseType(null);\n    }, 999);\n  };\n\n  var handleChange = function handleChange(event) {\n    setGameType(event.target.value);\n  };\n\n  var registerProduct = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(data, event) {\n      var productName, productDescription, gameType, prize, amount, productImg, product, send, response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              event.preventDefault();\n              productName = data.productName, productDescription = data.productDescription, gameType = data.gameType, prize = data.prize, amount = data.amount, productImg = data.productImg;\n              product = new FormData();\n              product.append(\"productName\", productName);\n              product.append(\"productDescription\", productDescription);\n              product.append(\"gameType\", gameType);\n              product.append(\"prize\", prize);\n              product.append(\"amount\", amount);\n              product.append(\"productImg\", productImg[0]);\n              _context.prev = 9;\n              _context.next = 12;\n              return fetch(\"http://localhost:8080/addProduct\", {\n                method: \"POST\",\n                body: product\n              });\n\n            case 12:\n              send = _context.sent;\n              _context.next = 15;\n              return send.json();\n\n            case 15:\n              response = _context.sent;\n              console.log(response);\n\n              if (response) {\n                setResponseType(response);\n\n                if (response.product) {\n                  reset();\n                }\n              }\n\n              _context.next = 23;\n              break;\n\n            case 20:\n              _context.prev = 20;\n              _context.t0 = _context[\"catch\"](9);\n              setResponseType({\n                message: \"Some error occured, try again\"\n              });\n\n            case 23:\n              clearAlert();\n\n            case 24:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[9, 20]]);\n    }));\n\n    return function registerProduct(_x, _x2) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      children: \"Add product\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit(registerProduct),\n      encType: \"\",\n      children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n        children: /*#__PURE__*/_jsxDEV(InputElement, {\n          type: \"text\",\n          name: \"productName\",\n          placeholder: \"Product Name\",\n          inputRef: register({\n            required: true\n          }),\n          onChange: function onChange() {\n            setError(\"productName\", {\n              type: \"manual\",\n              message: \"You have to provide a product name\"\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, _this), errors.productName && errors.productName.type === \"required\" && /*#__PURE__*/_jsxDEV(ErrorSpan, {\n        children: \"Please provide a product name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(FormLabel, {\n        children: /*#__PURE__*/_jsxDEV(InputElement, {\n          type: \"text\",\n          name: \"productDescription\",\n          placeholder: \"Product Description\",\n          inputRef: register({\n            required: true\n          }),\n          onChange: function onChange() {\n            setError(\"productDescription\", {\n              type: \"manual\",\n              message: \"You have to provide a product description\"\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, _this), errors.productDescription && errors.productDescription.type === \"required\" && /*#__PURE__*/_jsxDEV(ErrorSpan, {\n        children: \"Please provide a product description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 13\n      }, _this), /*#__PURE__*/_jsxDEV(FormLabel, {\n        children: /*#__PURE__*/_jsxDEV(SelectBox, {\n          children: /*#__PURE__*/_jsxDEV(Controller, {\n            as: /*#__PURE__*/_jsxDEV(Select, {\n              value: gameType,\n              onChange: handleChange,\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"Wargame\",\n                children: \"Wargame\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 19\n              }, _this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"Racing\",\n                children: \"Racing\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 19\n              }, _this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"MMO\",\n                children: \"MMO\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 19\n              }, _this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"RPG\",\n                children: \"RPG\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 19\n              }, _this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"RP\",\n                children: \"RP\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 19\n              }, _this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"Simulation\",\n                children: \"Simulation\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 19\n              }, _this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"Strategy\",\n                children: \"Strategy\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 19\n              }, _this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"Sports\",\n                children: \"Sports\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 19\n              }, _this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"Survival\",\n                children: \"Survival\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 19\n              }, _this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"Battle Royale\",\n                children: \"Battle Royale\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 19\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 17\n            }, _this),\n            name: \"gameType\",\n            rules: {\n              required: true\n            },\n            control: control\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, _this), errors.gameType && errors.gameType.type === \"required\" && /*#__PURE__*/_jsxDEV(ErrorSpan, {\n        children: \"Please provide a game type\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(FormLabel, {\n        children: /*#__PURE__*/_jsxDEV(InputElement, {\n          type: \"number\",\n          name: \"prize\",\n          placeholder: \"Enter prize\",\n          inputRef: register({\n            required: true,\n            min: 1\n          }),\n          onChange: function onChange() {\n            setError(\"prize\", {\n              type: \"manual\",\n              message: \"You have to provide a prize\"\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, _this), errors.prize && errors.prize.type === \"required\" && /*#__PURE__*/_jsxDEV(ErrorSpan, {\n        children: \"Please provide a prize\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(FormLabel, {\n        children: /*#__PURE__*/_jsxDEV(InputElement, {\n          type: \"number\",\n          name: \"amount\",\n          placeholder: \"Enter amount of products \",\n          inputRef: register({\n            required: true,\n            min: 1\n          }),\n          onChange: function onChange() {\n            setError(\"amount\", {\n              type: \"manual\",\n              message: \"You have to provide amount of products\"\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, _this), errors.amount && errors.amount.type === \"required\" && /*#__PURE__*/_jsxDEV(ErrorSpan, {\n        children: \"Please provide a amount of products\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: register({\n          required: true\n        }),\n        name: \"productImg\",\n        type: \"file\",\n        accept: \".png, .jpg, .jpeg\",\n        id: \"productImg\",\n        className: \"hidden\",\n        onChange: function onChange(e) {\n          setError(\"productImg\", {\n            type: \"manual\",\n            message: \"You have to provide an product image\"\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"productImg\",\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          color: \"primary\",\n          \"aria-label\": \"upload picture\",\n          component: \"span\",\n          children: /*#__PURE__*/_jsxDEV(PhotoCamera, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 9\n      }, _this), errors.productImg && errors.productImg.type === \"required\" && /*#__PURE__*/_jsxDEV(ErrorSpan, {\n        children: \"Please provide a product image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        color: \"secondary\",\n        children: \"Create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, _this), responseType && responseType.product && /*#__PURE__*/_jsxDEV(Alert, {\n      message: \"Product succesfully created\",\n      shouldOpen: true,\n      variant: \"success\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 9\n    }, _this) || responseType && responseType.message && /*#__PURE__*/_jsxDEV(Alert, {\n      message: responseType.message,\n      shouldOpen: true,\n      variant: \"error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 11\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(AddProductForm, \"IPM6EE5p4ECfSjeXsL7rAMydbZA=\", false, function () {\n  return [useForm];\n});\n\n_c6 = AddProductForm;\nexport default AddProductForm;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"Form\");\n$RefreshReg$(_c2, \"ErrorSpan\");\n$RefreshReg$(_c3, \"Header\");\n$RefreshReg$(_c4, \"InputElement\");\n$RefreshReg$(_c5, \"SelectBox\");\n$RefreshReg$(_c6, \"AddProductForm\");","map":{"version":3,"sources":["D:/projekty/ecommerce/front/components/AddProductForm/index.js"],"names":["React","useState","styled","useForm","Controller","Input","FormLabel","Button","Checkbox","IconButton","PhotoCamera","Select","MenuItem","Alert","Form","form","ErrorSpan","span","Header","h2","InputElement","SelectBox","div","defaultValues","productName","productDescription","gameType","prize","amount","productImage","AddProductForm","register","handleSubmit","errors","setError","reset","control","responseType","setResponseType","setGameType","clearAlert","setTimeout","handleChange","event","target","value","registerProduct","data","preventDefault","productImg","product","FormData","append","fetch","method","body","send","json","response","console","log","message","required","type","min","e"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport { FormLabel, Button, Checkbox } from \"@material-ui/core\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport PhotoCamera from \"@material-ui/icons/PhotoCamera\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Alert from \"../../components/Alert/index.js\";\r\n\r\nconst Form = styled.form`\r\n  display: flex;\r\n  width: 100%;\r\n  height: 100%;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  color: white;\r\n\r\n  & > .MuiButton-containedSecondary {\r\n    margin: 15px;\r\n    background-color: #b73d1cbf;\r\n\r\n    &:hover {\r\n      background-color: #ff3600bf;\r\n    }\r\n  }\r\n\r\n  & > .MuiFormLabel-root {\r\n    color: white;\r\n  }\r\n\r\n  & > .hidden {\r\n    display: none;\r\n  }\r\n\r\n  & > label > .MuiIconButton-colorPrimary {\r\n    color: #ff3600bf !important;\r\n  }\r\n\r\n  & > .MuiInputBase-root {\r\n    color: white !important;\r\n\r\n    &::placeholder {\r\n      color: white;\r\n    }\r\n  }\r\n`;\r\n\r\nconst ErrorSpan = styled.span`\r\n  color: #ff5a5a;\r\n  font-size: 12px;\r\n\r\n  & > a {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst Header = styled.h2`\r\n  display: flex;\r\n  font-weight: 700;\r\n  width: 100%;\r\n  padding: 10px;\r\n  justify-content: center;\r\n  color: rgb(255 90 90 /60%);\r\n`;\r\n\r\nconst InputElement = styled(Input)`\r\n  margin: 8px 0;\r\n  color: white;\r\n\r\n  & > .MuiInputBase-input {\r\n    color: white;\r\n  }\r\n`;\r\n\r\nconst SelectBox = styled.div`\r\n  .MuiInputBase-root {\r\n    color: rgba(255, 255, 255, 0.5);\r\n  }\r\n`;\r\n\r\nconst defaultValues = {\r\n  productName: null,\r\n  productDescription: null,\r\n  gameType: \"War\",\r\n  prize: null,\r\n  amount: null,\r\n  productImage: null,\r\n};\r\n\r\nconst AddProductForm = () => {\r\n  const { register, handleSubmit, errors, setError, reset, control } = useForm({\r\n    defaultValues,\r\n  });\r\n\r\n  const [responseType, setResponseType] = useState(null);\r\n  const [gameType, setGameType] = useState(\"War\");\r\n  const clearAlert = () => setTimeout(() => setResponseType(null), 999);\r\n\r\n  const handleChange = (event) => {\r\n    setGameType(event.target.value);\r\n  };\r\n\r\n  const registerProduct = async (data, event) => {\r\n    event.preventDefault();\r\n    const {\r\n      productName,\r\n      productDescription,\r\n      gameType,\r\n      prize,\r\n      amount,\r\n      productImg,\r\n    } = data;\r\n\r\n    const product = new FormData();\r\n    product.append(\"productName\", productName);\r\n    product.append(\"productDescription\", productDescription);\r\n    product.append(\"gameType\", gameType);\r\n    product.append(\"prize\", prize);\r\n    product.append(\"amount\", amount);\r\n    product.append(\"productImg\", productImg[0]);\r\n\r\n    try {\r\n      const send = await fetch(\"http://localhost:8080/addProduct\", {\r\n        method: \"POST\",\r\n        body: product,\r\n      });\r\n      const response = await send.json();\r\n      console.log(response);\r\n      if (response) {\r\n        setResponseType(response);\r\n        if (response.product) {\r\n          reset();\r\n        }\r\n      }\r\n    } catch (err) {\r\n      setResponseType({ message: \"Some error occured, try again\" });\r\n    }\r\n    clearAlert();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Header>Add product</Header>\r\n      <Form onSubmit={handleSubmit(registerProduct)} encType=''>\r\n        <FormLabel>\r\n          <InputElement\r\n            type='text'\r\n            name='productName'\r\n            placeholder='Product Name'\r\n            inputRef={register({ required: true })}\r\n            onChange={() => {\r\n              setError(\"productName\", {\r\n                type: \"manual\",\r\n                message: \"You have to provide a product name\",\r\n              });\r\n            }}\r\n          />\r\n        </FormLabel>\r\n        {errors.productName && errors.productName.type === \"required\" && (\r\n          <ErrorSpan>Please provide a product name</ErrorSpan>\r\n        )}\r\n\r\n        <FormLabel>\r\n          <InputElement\r\n            type='text'\r\n            name='productDescription'\r\n            placeholder='Product Description'\r\n            inputRef={register({ required: true })}\r\n            onChange={() => {\r\n              setError(\"productDescription\", {\r\n                type: \"manual\",\r\n                message: \"You have to provide a product description\",\r\n              });\r\n            }}\r\n          />\r\n        </FormLabel>\r\n        {errors.productDescription &&\r\n          errors.productDescription.type === \"required\" && (\r\n            <ErrorSpan>Please provide a product description</ErrorSpan>\r\n          )}\r\n\r\n        <FormLabel>\r\n          <SelectBox>\r\n            <Controller\r\n              as={\r\n                <Select value={gameType} onChange={handleChange}>\r\n                  <MenuItem value='Wargame'>Wargame</MenuItem>\r\n                  <MenuItem value='Racing'>Racing</MenuItem>\r\n                  <MenuItem value='MMO'>MMO</MenuItem>\r\n                  <MenuItem value='RPG'>RPG</MenuItem>\r\n                  <MenuItem value='RP'>RP</MenuItem>\r\n                  <MenuItem value='Simulation'>Simulation</MenuItem>\r\n                  <MenuItem value='Strategy'>Strategy</MenuItem>\r\n                  <MenuItem value='Sports'>Sports</MenuItem>\r\n                  <MenuItem value='Survival'>Survival</MenuItem>\r\n                  <MenuItem value='Battle Royale'>Battle Royale</MenuItem>\r\n                </Select>\r\n              }\r\n              name='gameType'\r\n              rules={{ required: true }}\r\n              control={control}\r\n            />\r\n          </SelectBox>\r\n        </FormLabel>\r\n        {errors.gameType && errors.gameType.type === \"required\" && (\r\n          <ErrorSpan>Please provide a game type</ErrorSpan>\r\n        )}\r\n\r\n        <FormLabel>\r\n          <InputElement\r\n            type='number'\r\n            name='prize'\r\n            placeholder='Enter prize'\r\n            inputRef={register({ required: true, min: 1 })}\r\n            onChange={() => {\r\n              setError(\"prize\", {\r\n                type: \"manual\",\r\n                message: \"You have to provide a prize\",\r\n              });\r\n            }}\r\n          />\r\n        </FormLabel>\r\n        {errors.prize && errors.prize.type === \"required\" && (\r\n          <ErrorSpan>Please provide a prize</ErrorSpan>\r\n        )}\r\n\r\n        <FormLabel>\r\n          <InputElement\r\n            type='number'\r\n            name='amount'\r\n            placeholder='Enter amount of products '\r\n            inputRef={register({ required: true, min: 1 })}\r\n            onChange={() => {\r\n              setError(\"amount\", {\r\n                type: \"manual\",\r\n                message: \"You have to provide amount of products\",\r\n              });\r\n            }}\r\n          />\r\n        </FormLabel>\r\n        {errors.amount && errors.amount.type === \"required\" && (\r\n          <ErrorSpan>Please provide a amount of products</ErrorSpan>\r\n        )}\r\n\r\n        <input\r\n          ref={register({ required: true })}\r\n          name='productImg'\r\n          type='file'\r\n          accept='.png, .jpg, .jpeg'\r\n          id='productImg'\r\n          className='hidden'\r\n          onChange={(e) => {\r\n            setError(\"productImg\", {\r\n              type: \"manual\",\r\n              message: \"You have to provide an product image\",\r\n            });\r\n          }}\r\n        />\r\n        <label htmlFor='productImg'>\r\n          <IconButton\r\n            color='primary'\r\n            aria-label='upload picture'\r\n            component='span'\r\n          >\r\n            <PhotoCamera />\r\n          </IconButton>\r\n        </label>\r\n        {errors.productImg && errors.productImg.type === \"required\" && (\r\n          <ErrorSpan>Please provide a product image</ErrorSpan>\r\n        )}\r\n\r\n        <Button type='submit' variant='contained' color='secondary'>\r\n          Create\r\n        </Button>\r\n      </Form>\r\n      {(responseType && responseType.product && (\r\n        <Alert\r\n          message='Product succesfully created'\r\n          shouldOpen={true}\r\n          variant='success'\r\n        />\r\n      )) ||\r\n        (responseType && responseType.message && (\r\n          <Alert\r\n            message={responseType.message}\r\n            shouldOpen={true}\r\n            variant='error'\r\n          />\r\n        ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddProductForm;\r\n"]},"metadata":{},"sourceType":"module"}