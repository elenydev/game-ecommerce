{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\projekty\\\\ecommerce\\\\front\\\\components\\\\AddProductForm\\\\index.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useForm } from \"react-hook-form\";\nimport Input from \"@material-ui/core/Input\";\nimport { FormLabel, Button, Checkbox } from \"@material-ui/core\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport PhotoCamera from \"@material-ui/icons/PhotoCamera\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nvar Form = styled.form.withConfig({\n  displayName: \"AddProductForm__Form\",\n  componentId: \"sc-108fhvp-0\"\n})([\"display:flex;width:100%;height:100%;flex-direction:column;justify-content:space-between;align-items:center;color:white;& > .MuiButton-containedSecondary{margin:15px;background-color:#b73d1cbf;&:hover{background-color:#ff3600bf;}}& > .MuiFormLabel-root{color:white;}& > .hidden{display:none;}& > label > .MuiIconButton-colorPrimary{color:#ff3600bf !important;}& > .MuiInputBase-root{color:white;&::placeholder{color:white;}}\"]);\n_c = Form;\nvar ErrorSpan = styled.span.withConfig({\n  displayName: \"AddProductForm__ErrorSpan\",\n  componentId: \"sc-108fhvp-1\"\n})([\"color:#ff5a5a;font-size:12px;& > a{cursor:pointer;}\"]);\n_c2 = ErrorSpan;\nvar Header = styled.h2.withConfig({\n  displayName: \"AddProductForm__Header\",\n  componentId: \"sc-108fhvp-2\"\n})([\"display:flex;font-weight:700;width:100%;padding:10px;justify-content:center;color:rgb(255 90 90 /60%);\"]);\n_c3 = Header;\nvar InputElement = styled(Input).withConfig({\n  displayName: \"AddProductForm__InputElement\",\n  componentId: \"sc-108fhvp-3\"\n})([\"margin:8px 0;color:white;& > .MuiInputBase-input{color:white;}\"]);\n_c4 = InputElement;\nvar defaultValues = {\n  productName: null,\n  productDescription: null,\n  gameType: \"War\",\n  prize: null,\n  amount: null,\n  productImage: null\n};\n\nvar AddProductForm = function AddProductForm() {\n  _s();\n\n  var _useForm = useForm({\n    defaultValues: defaultValues\n  }),\n      register = _useForm.register,\n      handleSubmit = _useForm.handleSubmit,\n      errors = _useForm.errors,\n      setError = _useForm.setError,\n      reset = _useForm.reset;\n\n  var _useState = useState(null),\n      responseType = _useState[0],\n      setResponseType = _useState[1];\n\n  var _useState2 = useState(\"War\"),\n      gameType = _useState2[0],\n      setGameType = _useState2[1];\n\n  var clearAlert = function clearAlert() {\n    return setTimeout(function () {\n      return setResponseType(null);\n    }, 999);\n  };\n\n  var handleChange = function handleChange(event) {\n    setGameType(event.target.value);\n  };\n\n  var registerUser = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(data, event) {\n      var productName, productDescription, gameType, prize, amount, productImage, user, send, response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              event.preventDefault();\n              productName = data.productName, productDescription = data.productDescription, gameType = data.gameType, prize = data.prize, amount = data.amount, productImage = data.productImage;\n              user = new FormData();\n              user.append(\"productName\", productName);\n              user.append(\"productDescription\", productDescription);\n              user.append(\"gameType\", gameType);\n              user.append(\"prize\", prize);\n              user.append(\"amount\", amount);\n              user.append(\"productImage\", productImage[0]);\n              _context.prev = 9;\n              _context.next = 12;\n              return fetch(\"http://localhost:8080/addProduct\", {\n                method: \"POST\",\n                body: user\n              });\n\n            case 12:\n              send = _context.sent;\n              _context.next = 15;\n              return send.json();\n\n            case 15:\n              response = _context.sent;\n\n              if (response) {\n                setResponseType(response);\n\n                if (response.product) {\n                  reset();\n                }\n              }\n\n              _context.next = 22;\n              break;\n\n            case 19:\n              _context.prev = 19;\n              _context.t0 = _context[\"catch\"](9);\n              setResponseType({\n                message: \"Some error occured, try again\"\n              });\n\n            case 22:\n              clearAlert();\n\n            case 23:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[9, 19]]);\n    }));\n\n    return function registerUser(_x, _x2) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      children: \"Add product\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit(registerUser),\n      encType: \"\",\n      children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n        children: /*#__PURE__*/_jsxDEV(InputElement, {\n          type: \"text\",\n          name: \"productName\",\n          placeholder: \"Product Name\",\n          inputRef: register({\n            required: true\n          }),\n          onChange: function onChange() {\n            setError(\"productName\", {\n              type: \"manual\",\n              message: \"You have to provide a product name\"\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, _this), errors.productName && errors.productName.type === \"required\" && /*#__PURE__*/_jsxDEV(ErrorSpan, {\n        children: \"Please provide a product name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(FormLabel, {\n        children: /*#__PURE__*/_jsxDEV(InputElement, {\n          type: \"text\",\n          name: \"productDescription\",\n          placeholder: \"Product Description\",\n          inputRef: register({\n            required: true\n          }),\n          onChange: function onChange() {\n            setError(\"productDescription\", {\n              type: \"manual\",\n              message: \"You have to provide a product description\"\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, _this), errors.productDescription && errors.productDescription.type === \"required\" && /*#__PURE__*/_jsxDEV(ErrorSpan, {\n        children: \"Please provide a product description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 13\n      }, _this), /*#__PURE__*/_jsxDEV(FormLabel, {\n        children: /*#__PURE__*/_jsxDEV(Select, {\n          value: gameType,\n          onChange: function onChange(e) {\n            setError(\"productDescription\", {\n              type: \"manual\",\n              message: \"You have to provide a product description\"\n            });\n            handleChange(e);\n          },\n          placeholder: \"Game Type\",\n          name: \"gameType\",\n          inputRef: register({\n            required: true\n          }),\n          children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n            selected: true,\n            value: \"Wargame\",\n            children: \"Wargame\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"Racing\",\n            children: \"Racing\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"MMO\",\n            children: \"MMO\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"RPG\",\n            children: \"RPG\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"RP\",\n            children: \"RP\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"Simulation\",\n            children: \"Simulation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"Strategy\",\n            children: \"Strategy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"Sports\",\n            children: \"Sports\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"Survival\",\n            children: \"Survival\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"Battle Royale\",\n            children: \"Battle Royale\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, _this), errors.gameType && errors.gameType.type === \"required\" && /*#__PURE__*/_jsxDEV(ErrorSpan, {\n        children: \"Please provide a game type\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(FormLabel, {\n        children: /*#__PURE__*/_jsxDEV(InputElement, {\n          type: \"number\",\n          name: \"prize\",\n          placeholder: \"Enter prize\",\n          inputRef: register({\n            required: true\n          }),\n          onChange: function onChange() {\n            setError(\"prize\", {\n              type: \"manual\",\n              message: \"You have to provide a prize\"\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, _this), errors.prize && errors.prize.type === \"required\" && /*#__PURE__*/_jsxDEV(ErrorSpan, {\n        children: \"Please provide a prize\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(FormLabel, {\n        children: /*#__PURE__*/_jsxDEV(InputElement, {\n          type: \"number\",\n          name: \"amount\",\n          placeholder: \"Enter amount of products \",\n          inputRef: register({\n            required: true,\n            minValue: 5\n          }),\n          onChange: function onChange() {\n            setError(\"amount\", {\n              type: \"manual\",\n              message: \"You have to provide amount of products\"\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, _this), errors.amount && errors.amount.type === \"required\" && /*#__PURE__*/_jsxDEV(ErrorSpan, {\n        children: \"Please provide a amount of products\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: register({\n          required: true\n        }),\n        name: \"productImg\",\n        type: \"file\",\n        accept: \".png, .jpg, .jpeg\",\n        id: \"productImg\",\n        className: \"hidden\",\n        onChange: function onChange(e) {\n          setError(\"productImg\", {\n            type: \"manual\",\n            message: \"You have to provide an product image\"\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"productImg\",\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          color: \"primary\",\n          \"aria-label\": \"upload picture\",\n          component: \"span\",\n          children: /*#__PURE__*/_jsxDEV(PhotoCamera, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 9\n      }, _this), errors.productImg && errors.productImg.type === \"required\" && /*#__PURE__*/_jsxDEV(ErrorSpan, {\n        children: \"Please provide a product image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        color: \"secondary\",\n        children: \"Create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(AddProductForm, \"NR5Tmn27URaS8IJaNeivpQUzhmU=\", false, function () {\n  return [useForm];\n});\n\n_c5 = AddProductForm;\nexport default AddProductForm;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"Form\");\n$RefreshReg$(_c2, \"ErrorSpan\");\n$RefreshReg$(_c3, \"Header\");\n$RefreshReg$(_c4, \"InputElement\");\n$RefreshReg$(_c5, \"AddProductForm\");","map":{"version":3,"sources":["D:/projekty/ecommerce/front/components/AddProductForm/index.js"],"names":["React","useState","styled","useForm","Input","FormLabel","Button","Checkbox","IconButton","PhotoCamera","Select","MenuItem","Form","form","ErrorSpan","span","Header","h2","InputElement","defaultValues","productName","productDescription","gameType","prize","amount","productImage","AddProductForm","register","handleSubmit","errors","setError","reset","responseType","setResponseType","setGameType","clearAlert","setTimeout","handleChange","event","target","value","registerUser","data","preventDefault","user","FormData","append","fetch","method","body","send","json","response","product","message","required","type","e","minValue","productImg"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport { FormLabel, Button, Checkbox } from \"@material-ui/core\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport PhotoCamera from \"@material-ui/icons/PhotoCamera\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\n\r\nconst Form = styled.form`\r\n  display: flex;\r\n  width: 100%;\r\n  height: 100%;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  color: white;\r\n\r\n  & > .MuiButton-containedSecondary {\r\n    margin: 15px;\r\n    background-color: #b73d1cbf;\r\n\r\n    &:hover {\r\n      background-color: #ff3600bf;\r\n    }\r\n  }\r\n\r\n  & > .MuiFormLabel-root {\r\n    color: white;\r\n  }\r\n\r\n  & > .hidden {\r\n    display: none;\r\n  }\r\n\r\n  & > label > .MuiIconButton-colorPrimary {\r\n    color: #ff3600bf !important;\r\n  }\r\n\r\n  & > .MuiInputBase-root {\r\n    color: white;\r\n\r\n    &::placeholder {\r\n      color: white;\r\n    }\r\n  }\r\n`;\r\n\r\nconst ErrorSpan = styled.span`\r\n  color: #ff5a5a;\r\n  font-size: 12px;\r\n\r\n  & > a {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst Header = styled.h2`\r\n  display: flex;\r\n  font-weight: 700;\r\n  width: 100%;\r\n  padding: 10px;\r\n  justify-content: center;\r\n  color: rgb(255 90 90 /60%);\r\n`;\r\n\r\nconst InputElement = styled(Input)`\r\n  margin: 8px 0;\r\n  color: white;\r\n\r\n  & > .MuiInputBase-input {\r\n    color: white;\r\n  }\r\n`;\r\n\r\nconst defaultValues = {\r\n  productName: null,\r\n  productDescription: null,\r\n  gameType: \"War\",\r\n  prize: null,\r\n  amount: null,\r\n  productImage: null,\r\n};\r\n\r\nconst AddProductForm = () => {\r\n  const { register, handleSubmit, errors, setError, reset } = useForm({\r\n    defaultValues,\r\n  });\r\n\r\n  const [responseType, setResponseType] = useState(null);\r\n  const [gameType, setGameType] = useState(\"War\");\r\n  const clearAlert = () => setTimeout(() => setResponseType(null), 999);\r\n\r\n  const handleChange = (event) => {\r\n    setGameType(event.target.value);\r\n  };\r\n\r\n  const registerUser = async (data, event) => {\r\n    event.preventDefault();\r\n    const {\r\n      productName,\r\n      productDescription,\r\n      gameType,\r\n      prize,\r\n      amount,\r\n      productImage,\r\n    } = data;\r\n\r\n    const user = new FormData();\r\n    user.append(\"productName\", productName);\r\n    user.append(\"productDescription\", productDescription);\r\n    user.append(\"gameType\", gameType);\r\n    user.append(\"prize\", prize);\r\n    user.append(\"amount\", amount);\r\n    user.append(\"productImage\", productImage[0]);\r\n\r\n    try {\r\n      const send = await fetch(\"http://localhost:8080/addProduct\", {\r\n        method: \"POST\",\r\n        body: user,\r\n      });\r\n      const response = await send.json();\r\n      if (response) {\r\n        setResponseType(response);\r\n        if (response.product) {\r\n          reset();\r\n        }\r\n      }\r\n    } catch (err) {\r\n      setResponseType({ message: \"Some error occured, try again\" });\r\n    }\r\n    clearAlert();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Header>Add product</Header>\r\n      <Form onSubmit={handleSubmit(registerUser)} encType=''>\r\n        <FormLabel>\r\n          <InputElement\r\n            type='text'\r\n            name='productName'\r\n            placeholder='Product Name'\r\n            inputRef={register({ required: true })}\r\n            onChange={() => {\r\n              setError(\"productName\", {\r\n                type: \"manual\",\r\n                message: \"You have to provide a product name\",\r\n              });\r\n            }}\r\n          />\r\n        </FormLabel>\r\n        {errors.productName && errors.productName.type === \"required\" && (\r\n          <ErrorSpan>Please provide a product name</ErrorSpan>\r\n        )}\r\n\r\n        <FormLabel>\r\n          <InputElement\r\n            type='text'\r\n            name='productDescription'\r\n            placeholder='Product Description'\r\n            inputRef={register({ required: true })}\r\n            onChange={() => {\r\n              setError(\"productDescription\", {\r\n                type: \"manual\",\r\n                message: \"You have to provide a product description\",\r\n              });\r\n            }}\r\n          />\r\n        </FormLabel>\r\n        {errors.productDescription &&\r\n          errors.productDescription.type === \"required\" && (\r\n            <ErrorSpan>Please provide a product description</ErrorSpan>\r\n          )}\r\n\r\n        <FormLabel>\r\n          <Select\r\n            value={gameType}\r\n            onChange={(e) => {\r\n              setError(\"productDescription\", {\r\n                type: \"manual\",\r\n                message: \"You have to provide a product description\",\r\n              });\r\n              handleChange(e);\r\n            }}\r\n            placeholder='Game Type'\r\n            name='gameType'\r\n            inputRef={register({ required: true })}\r\n          >\r\n            <MenuItem selected value='Wargame'>Wargame</MenuItem>\r\n            <MenuItem value='Racing'>Racing</MenuItem>\r\n            <MenuItem value='MMO'>MMO</MenuItem>\r\n            <MenuItem value='RPG'>RPG</MenuItem>\r\n            <MenuItem value='RP'>RP</MenuItem>\r\n            <MenuItem value='Simulation'>Simulation</MenuItem>\r\n            <MenuItem value='Strategy'>Strategy</MenuItem>\r\n            <MenuItem value='Sports'>Sports</MenuItem>\r\n            <MenuItem value='Survival'>Survival</MenuItem>\r\n            <MenuItem value='Battle Royale'>Battle Royale</MenuItem>\r\n          </Select>\r\n        </FormLabel>\r\n        {errors.gameType && errors.gameType.type === \"required\" && (\r\n          <ErrorSpan>Please provide a game type</ErrorSpan>\r\n        )}\r\n\r\n        <FormLabel>\r\n          <InputElement\r\n            type='number'\r\n            name='prize'\r\n            placeholder='Enter prize'\r\n            inputRef={register({ required: true })}\r\n            onChange={() => {\r\n              setError(\"prize\", {\r\n                type: \"manual\",\r\n                message: \"You have to provide a prize\",\r\n              });\r\n            }}\r\n          />\r\n        </FormLabel>\r\n        {errors.prize && errors.prize.type === \"required\" && (\r\n          <ErrorSpan>Please provide a prize</ErrorSpan>\r\n        )}\r\n\r\n        <FormLabel>\r\n          <InputElement\r\n            type='number'\r\n            name='amount'\r\n            placeholder='Enter amount of products '\r\n            inputRef={register({ required: true, minValue: 5 })}\r\n            onChange={() => {\r\n              setError(\"amount\", {\r\n                type: \"manual\",\r\n                message: \"You have to provide amount of products\",\r\n              });\r\n            }}\r\n          />\r\n        </FormLabel>\r\n        {errors.amount && errors.amount.type === \"required\" && (\r\n          <ErrorSpan>Please provide a amount of products</ErrorSpan>\r\n        )}\r\n\r\n        <input\r\n          ref={register({ required: true })}\r\n          name='productImg'\r\n          type='file'\r\n          accept='.png, .jpg, .jpeg'\r\n          id='productImg'\r\n          className='hidden'\r\n          onChange={(e) => {\r\n            setError(\"productImg\", {\r\n              type: \"manual\",\r\n              message: \"You have to provide an product image\",\r\n            });\r\n          }}\r\n        />\r\n        <label htmlFor='productImg'>\r\n          <IconButton\r\n            color='primary'\r\n            aria-label='upload picture'\r\n            component='span'\r\n          >\r\n            <PhotoCamera />\r\n          </IconButton>\r\n        </label>\r\n        {errors.productImg && errors.productImg.type === \"required\" && (\r\n          <ErrorSpan>Please provide a product image</ErrorSpan>\r\n        )}\r\n\r\n        <Button type='submit' variant='contained' color='secondary'>\r\n          Create\r\n        </Button>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddProductForm;\r\n"]},"metadata":{},"sourceType":"module"}